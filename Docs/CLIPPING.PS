%!PS-Adobe-2.0
%%Creator: dvips 5.526 Copyright 1986, 1994 Radical Eye Software
%%Title: Clipping.dvi
%%CreationDate: Fri Mar 12 12:13:00 1999
%%Pages: 18
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Times-Italic
%%EndComments
%DVIPSCommandLine: dvips -o Clipping.ps Clipping.dvi
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1999.03.12:1212
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: texps.pro
TeXDict begin /rf{findfont dup length 1 add dict begin{1 index /FID ne 2
index /UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type /integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics /Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont /setfont load]cvx def}def
/ObliqueSlant{dup sin S cos div neg}B /SlantFont{4 index mul add}def
/ExtendFont{3 -1 roll mul exch}def /ReEncodeFont{/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300
(/2/home/joy/projects/Graphics-Notes/Clipping/Clipping.dvi)
@start /Fa 134[19 2[19 21 12 15 17 1[21 19 21 31 10 2[10
21 19 12 17 21 17 1[19 11[27 1[21 14[27 27 1[27 7[19
19 19 19 4[19 2[9 1[9 2[12 12 40[{}33 37.500000 /Times-Bold
rf /Fb 4 20 df<000180000300000600000C0000180000380000300000600000E00000
C0000180000380000300000700000700000600000E00000C00001C00001C000018000038
0000380000380000380000700000700000700000700000700000700000E00000E00000E0
0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
0000E00000E00000E00000E0000070000070000070000070000070000070000038000038
00003800003800001800001C00001C00000C00000E000006000007000007000003000003
800001800000C00000E000006000003000003800001800000C0000060000030000018011
5178811B>16 D<C000006000003000001800000C00000E00000600000300000380000180
0000C00000E000006000007000007000003000003800001800001C00001C00000C00000E
00000E00000E00000E000007000007000007000007000007000007000003800003800003
800003800003800003800003800003800003800003800003800003800003800003800003
80000380000380000380000380000700000700000700000700000700000700000E00000E
00000E00000E00000C00001C00001C0000180000380000300000700000700000600000E0
0000C0000180000380000300000600000E00000C0000180000300000600000C000001151
7F811B>I<00000C0000180000300000600000C00001C0000380000700000600000E0000
1C00001C0000380000700000700000E00000E00001E00001C00003C00003800003800007
80000700000700000F00000E00000E00001E00001E00001C00003C00003C00003C00003C
0000380000780000780000780000780000780000780000780000700000F00000F00000F0
0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
0000F00000F00000F00000F00000F0000070000078000078000078000078000078000078
00007800003800003C00003C00003C00003C00001C00001E00001E00000E00000E00000F
000007000007000007800003800003800003C00001C00001E00000E00000E00000700000
7000003800001C00001C00000E000006000007000003800001C00000C000006000003000
001800000C166C778121>I<C000006000003000001800000C00000E0000070000038000
01800001C00000E00000E000007000003800003800001C00001C00001E00000E00000F00
0007000007000007800003800003800003C00001C00001C00001E00001E00000E00000F0
0000F00000F00000F0000070000078000078000078000078000078000078000078000038
00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C
00003C00003C00003C00003C00003C00003C00003C00003C000038000078000078000078
0000780000780000780000780000700000F00000F00000F00000F00000E00001E00001E0
0001C00001C00003C0000380000380000780000700000700000F00000E00001E00001C00
001C0000380000380000700000E00000E00001C0000180000380000700000E00000C0000
180000300000600000C00000166C7F8121>I E /Fc 152[23 1[20
54[11 46[{}3 45.624989 /Times-Italic rf /Fd 3 4 df<FFFFFF80FFFFFF801902
7D8A20>0 D<60F0F06004047C8B0C>I<01800180018001804182F18F399C0FF003C003C0
0FF0399CF18F4182018001800180018010127E9215>3 D E /Fe
5 62 df<004000800100020006000C000C0018001800300030007000600060006000E000
E000E000E000E000E000E000E000E000E000E000E0006000600060007000300030001800
18000C000C00060002000100008000400A2A7D9E10>40 D<800040002000100018000C00
0C000600060003000300038001800180018001C001C001C001C001C001C001C001C001C0
01C001C001C0018001800180038003000300060006000C000C0018001000200040008000
0A2A7E9E10>I<0006000000060000000600000006000000060000000600000006000000
0600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE00006000000
060000000600000006000000060000000600000006000000060000000600000006000000
06000000060000000600001B1C7E9720>43 D<03C00C301818300C300C700E60066006E0
07E007E007E007E007E007E007E007E007E007E007E007E00760066006700E300C300C18
180C3007E0101D7E9B15>48 D<7FFFFFC0FFFFFFE0000000000000000000000000000000
0000000000000000000000000000000000FFFFFFE07FFFFFC01B0C7E8F20>61
D E /Ff 1 1 df<FFFFC0FFFFC012027D871A>0 D E /Fg 6 117
df<007C000C0018001800180018003007B00C7010703060606060606060C0C0C0C8C0C8
41C862D03C700E147E9311>100 D<06070600000000384C4C8C98181830326262643808
147F930C>105 D<30F8590C4E0C9C0C980C180C180C30183019303130316032601C100D
7F8C15>110 D<03800C6018203030603060306030C060C06040C0608023001E000C0D7E
8C10>I<0C78168C130426062606060606060C0C0C0C0C080C101A2019C0180018003000
30003000FC000F13818C11>I<02000600060006000C00FF800C000C0018001800180018
00300031003100320032001C0009127F910D>116 D E /Fh 2 50
df<0F0030C0606060604020C030C030C030C030C030C030C030C030C030402060606060
30C00F000C137E9211>48 D<0C001C00EC000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C000C00FFC00A137D9211>I E /Fi 3 82 df<FFFFFFFF07E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E0FFFFFFFF101C7F9B12>73 D<FFFFF800FFFFFE000FC03F800FC00F80
0FC007C00FC007E00FC007E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F80
0FC03F000FFFFC000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC00000FFFC0000FFFC00001B1C7E9B21>80
D<003FE00001F07C0003C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001
F07C0001F0FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001
F87C0001F07C0001F07E0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C
00003FF8080000380800003C1800003FF800001FF800001FF000000FF0000007E0000003
C01D247D9B24>I E /Fj 11 127 df<60F0F06004047C830C>58
D<60F0F0701010101020204080040C7C830C>I<0000038000000F0000003C000000F000
0003C000000F0000003C000000F0000003C000000F0000003C000000F0000000F0000000
3C0000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C00
00000F000000038019187D9520>I<E0000000780000001E0000000780000001E0000000
780000001E0000000780000001E0000000780000001E00000007800000078000001E0000
0078000001E00000078000001E00000078000001E00000078000001E00000078000000E0
00000019187D9520>62 D<0007E00000E00000E00001C00001C00001C00001C000038000
038000038000038001E7000717000C0F00180F00380E00300E00700E00700E00E01C00E0
1C00E01C00E01C00E03880E03880E038806078803199001E0E00131D7E9C16>100
D<01C003C003C001800000000000000000000000001C00270047004700870087000E000E
001C001C001C003800388038807080710032001C000A1C7E9B0E>105
D<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03801C03801C03801C07
00380710380710380E10380E2070064030038014127E9119>110
D<00F800030C000E06001C0300180300300300700380700380E00700E00700E00700E00E
00E00E00E01C0060180060300030E0000F800011127E9114>I<07078009C86008D03008
E03011C03011C03801C03801C0380380700380700380700380600700E00700C007018007
83000E86000E78000E00000E00001C00001C00001C00001C00003C0000FF8000151A8191
15>I<00C001C001C001C00380038003800380FFF00700070007000E000E000E000E001C
001C001C001C00382038203840384018800F000C1A80990F>116
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E /Fk 69[18 11[23 3[18 48[21 21 1[21 1[12 16 14 1[21
21 21 1[12 2[12 21 2[18 21 18 21 18 97[{}20 41.666668
/Times-Roman rf /Fl 136[30 21 23 14 16 18 1[23 21 23
35 12 2[12 23 21 14 18 23 18 1[21 20[28 2[16 1[32 3[30
1[30 65[{}24 41.666668 /Times-Bold rf /Fm 1 1 df<FFFFF0FFFFF014027D881B>
0 D E /Fn 2 51 df<0C003C00CC000C000C000C000C000C000C000C000C000C000C000C
000C00FF8009107E8F0F>49 D<1F00618040C08060C0600060006000C00180030006000C
00102020207FC0FFC00B107F8F0F>I E /Fo 81[25 57[15 18 20
1[25 23 25 38 13 2[13 2[15 20 1[20 1[23 10[33 6[35 5[18
5[33 20[11 46[{}19 45.624989 /Times-Bold rf /Fp 3 51
df<07C018303018701C600C600CE00EE00EE00EE00EE00EE00EE00EE00EE00E600C600C
701C30181C7007C00F157F9412>48 D<03000700FF000700070007000700070007000700
07000700070007000700070007000700070007007FF00C157E9412>I<0F8030E0407080
30C038E0384038003800700070006000C00180030006000C08080810183FF07FF0FFF00D
157E9412>I E /Fq 9 123 df<0FFFC01FFFC02108004110008110000210000210000210
000610000410000C10000C1800181800180800120E7F8D14>25 D<07FFF800E00E00E007
00E00700E00701C00701C00701C00701C00E03801C03807003FFC0038000070000070000
0700000700000E00000E00000E00000E00001C0000FF800018177F9616>80
D<003E000C000C000C000C0018001800180018073018F0307060706060C060C060C06080
C080C480C4C1C446C838700F177E9612>100 D<383C1E0044C663004702810046030100
8E0703000C0603000C0603000C060600180C0600180C0620180C0C20180C0C4030180440
301807801B0E7F8D1F>109 D<383C0044C6004702004602008E06000C06000C06000C0C
00180C00180C40181840181880300880300F00120E7F8D15>I<1C020426060E46060646
0606860C040C0C040C0C040C0C041818081818081818100818100C2C2003C7C0170E7F8D
19>119 D<0F1F0011A18020C38020C300418000018000018000018000030000030200C3
0200E70400C5080078F000110E7F8D14>I<1C02260646064606860C0C0C0C0C0C0C1818
1818181818380C7007B000300060706070C021801E000F147F8D11>I<07840FCC187810
1000200040018002000400080810083C3043E081C00E0E7F8D10>I
E /Fr 20 119 df<0020004000800100020006000C000C00180018003000300030007000
600060006000E000E000E000E000E000E000E000E000E000E000E000E000600060006000
7000300030003000180018000C000C000600020001000080004000200B2E7DA112>40
D<800040002000100008000C00060006000300030001800180018001C000C000C000C000
E000E000E000E000E000E000E000E000E000E000E000E000C000C000C001C00180018001
8003000300060006000C00080010002000400080000B2E7DA112>I<0006000000060000
000600000006000000060000000600000006000000060000000600000006000000060000
00060000000600000006000000060000FFFFFFF0FFFFFFF0000600000006000000060000
000600000006000000060000000600000006000000060000000600000006000000060000
0006000000060000000600001C207D9A23>43 D<03F0000E1C001C0E0018060038070070
0380700380700380700380F003C0F003C0F003C0F003C0F003C0F003C0F003C0F003C0F0
03C0F003C0F003C0F003C0F003C07003807003807003807807803807001806001C0E000E
1C0003F000121F7E9D17>48 D<018003800F80F380038003800380038003800380038003
80038003800380038003800380038003800380038003800380038003800380038007C0FF
FE0F1E7C9D17>I<03F0000C1C00100E00200700400780800780F007C0F803C0F803C0F8
03C02007C00007C0000780000780000F00000E00001C0000380000700000600000C00001
80000300000600400C00401800401000803FFF807FFF80FFFF80121E7E9D17>I<7FFFFF
E0FFFFFFF000000000000000000000000000000000000000000000000000000000000000
00FFFFFFF07FFFFFE01C0C7D9023>61 D<1FE000303000781800781C00300E00000E0000
0E00000E0000FE00078E001E0E00380E00780E00F00E10F00E10F00E10F01E10781E1038
67200F83C014147E9317>97 D<03F80E0C1C1E381E380C70007000F000F000F000F000F0
00F00070007000380138011C020E0C03F010147E9314>99 D<03F0000E1C001C0E003807
00380700700700700380F00380F00380FFFF80F00000F00000F000007000007000003800
801800800C010007060001F80011147F9314>101 D<1C001E003E001E001C0000000000
00000000000000000E007E000E000E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E000E00FFC00A1F809E0C>105 D<0E00FE000E000E000E000E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E
000E000E000E000E000E00FFE00B20809F0C>108 D<0E1F01F000FE618618000E81C81C
000F00F00E000F00F00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E00
0E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E00E00E000E
00E00E000E00E00E00FFE7FE7FE023147F9326>I<0E3E00FE43000E81800F01C00F01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C0FFE7FC16147F9319>I<01F800070E001C03803801C03801C07000E07000
E0F000F0F000F0F000F0F000F0F000F0F000F07000E07000E03801C03801C01C0380070E
0001F80014147F9317>I<0E3E00FEC3800F01C00F00E00E00E00E00F00E00700E00780E
00780E00780E00780E00780E00780E00700E00F00E00E00F01E00F01C00EC3000E3E000E
00000E00000E00000E00000E00000E00000E00000E0000FFE000151D7F9319>I<0E78FE
8C0F1E0F1E0F0C0E000E000E000E000E000E000E000E000E000E000E000E000E000E00FF
E00F147F9312>114 D<1F9030704030C010C010C010E00078007F803FE00FF000708038
80188018C018C018E030D0608F800D147E9312>I<020002000200060006000E000E003E
00FFF80E000E000E000E000E000E000E000E000E000E000E000E080E080E080E080E0806
10031001E00D1C7F9B12>I<FF83F81E01E01C00C00E00800E00800E0080070100070100
03820003820003820001C40001C40001EC0000E80000E800007000007000007000002000
15147F9318>118 D E /Fs 6 107 df<FFFFFFC0FFFFFFC01A027C8B23>0
D<70F8F8F87005057C8D0D>I<03C00FF01FF83FFC7FFE7FFEFFFFFFFFFFFFFFFFFFFFFF
FF7FFE7FFE3FFC1FF80FF003C010127D9317>15 D<000000C0000003C000000F0000003C
000000F0000003C00000070000001C00000078000001E00000078000001E000000780000
00E0000000780000001E0000000780000001E0000000780000001C0000000700000003C0
000000F00000003C0000000F00000003C0000000C0000000000000000000000000000000
000000000000000000000000007FFFFF80FFFFFFC01A247C9C23>20
D<003FFFC001FFFFF0071E03FC081E00FE181E003E701E001F701E001FC01E000F001C00
0F001C000F003C000E003C000E003C001C0038001C003800380078003000780040007000
800070030000F01C0000F3F00000E7800000E0000001E0000001C0000001C0000003C000
00038000000380000007000000070000000E0000000C00000020217F9E20>80
D<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0022D7BA10D>106 D E /Ft 3 82 df<FFFFFFFF07E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E0FFFFFFFF101F7E9E14>73 D<FFFFFE00FFFFFF8007E00FE0
07E003F007E001F807E001F807E001FC07E001FC07E001FC07E001FC07E001FC07E001F8
07E001F807E003F007E00FE007FFFF8007FFFE0007E0000007E0000007E0000007E00000
07E0000007E0000007E0000007E0000007E0000007E0000007E0000007E00000FFFF0000
FFFF00001E1F7E9E24>80 D<001FF80000FFFF0001F81F8007E007E00FC003F01F8001F8
1F8001F83F0000FC7F0000FE7F0000FE7E00007EFE00007FFE00007FFE00007FFE00007F
FE00007FFE00007FFE00007FFE00007FFE00007F7E00007E7E00007E7F0000FE3F0000FC
3F87C1FC1F8FE1F80FD833F007F83FE001F81F8000FFFF00001FFE0300001E0300001F07
00000FFF00000FFF000007FE000007FE000003FC000001F8000000F020287D9E27>I
E /Fu 17 127 df<007C0001C3000701810E01C11E00C11C00E23C00E27800E27800E478
00E4F000E8F000F0F000F0F000E0F000E07000E07003E030046118383207C01C18147E93
1D>11 D<007E01C007000E001C003C003800780078007FF0F000F000F000700070007000
300018000C1807E00F147E9312>15 D<001E0000630000C38001C1800381800301C00701
C00F01C00E01C01E03C01C03C03C03C03C03C03C03C07807807FFF807FFF80780780F00F
00F00F00F00F00F00E00F01E00E01C00E03C00E03800E0300060700060E00070C0003180
001E000012207E9F15>18 D<0FFFFC1FFFFC3FFFFC608200C08400808400018400010400
010C00030C00030C00020C00060C00060C000E0C000C0E001C0E001C0E00380F00180600
16147E931A>25 D<70F8F8F87005057C840D>58 D<70F8FCFC7404040408081010204006
0E7C840D>I<000001C00000078000001E00000078000001E00000078000000E00000038
000000F0000003C000000F0000003C000000F0000000F00000003C0000000F00000003C0
000000F0000000380000000E0000000780000001E0000000780000001E00000007800000
01C01A1A7C9723>I<E0000000780000001E0000000780000001E0000000780000001C00
00000700000003C0000000F00000003C0000000F00000003C0000003C000000F0000003C
000000F0000003C00000070000001C00000078000001E00000078000001E000000780000
00E00000001A1A7C9723>62 D<0000780003F80000700000700000700000700000E00000
E00000E00000E00001C00001C000F1C00389C00707800E03801C03803C03803807007807
00780700780700F00E00F00E00F00E00F00E10F01C20F01C20703C20705C40308C400F07
8015207E9F18>100 D<00007C0000CE00019E00039E00030C0007000007000007000007
00000E00000E00000E0000FFF0000E00000E00001C00001C00001C00001C00001C000038
0000380000380000380000380000700000700000700000700000700000E00000E00000E0
0000E00000C00001C000318000798000F300006200003C000017297E9F16>102
D<1E07802318C023A06043C0704380704380708700E00700E00700E00700E00E01C00E01
C00E01C00E03821C03841C07041C07081C03083803101801E017147E931B>110
D<00C000E001C001C001C001C003800380FFF8038007000700070007000E000E000E000E
001C001C001C001C10382038203820384018800F000D1C7F9B10>116
D<0F006060118070F02180E0F821C0E07841C0E0384380E0188381C0100701C0100701C0
100701C0100E0380200E0380200E0380200E0380400E0380400E0380800E078080060781
000709860001F078001D147E9321>119 D<03C1C00C62201034701038F02038F0203860
40700000700000700000700000E00000E00000E00000E02061C040F1C040F1C080E2C080
446300383C0014147E931A>I<0F00601180702180E021C0E041C0E04380E08381C00701
C00701C00701C00E03800E03800E03800E03800E07000C07000C07000E0F00061E0003EE
00000E00000E00001C0078180078380070700060600021C0001F0000141D7E9316>I<01
E02003F04007F8C00C1F8008010000020000040000080000100000600000C00001000002
00000400800801001003003F060061FC0040F80080700013147E9315>I<000300000300
000180FFFFE0FFFFE0000380000600000C001308779F17>126 D
E /Fv 69[20 8[23 1[25 25 3[20 47[20 23 23 33 23 23 13
18 15 23 23 23 23 35 13 23 13 13 23 23 15 20 23 20 23
20 9[43 33 1[28 25 3[33 33 1[28 2[15 33 33 25 2[30 30
33 1[20 3[13 13 23 23 23 23 23 23 23 23 23 23 13 11 15
11 2[15 15 15 5[15 33[{}66 45.624989 /Times-Roman rf
/Fw 133[22 25 2[25 25 14 19 17 1[25 25 25 39 14 2[14
25 1[17 22 25 22 1[22 10[36 36 1[28 33 6[36 19 17 1[36
2[36 33 20[12 1[12 44[{}31 50.000000 /Times-Roman rf
/Fx 134[30 30 43 30 33 20 23 27 1[33 30 33 50 17 1[20
17 33 30 20 27 33 27 33 30 10[43 1[40 33 2[37 47 43 1[40
2[23 1[47 3[43 1[43 7[30 30 30 30 30 30 30 30 30 1[17
47[{}44 59.999973 /Times-Bold rf /Fy 138[28 17 19 22
1[28 25 28 41 3[14 28 2[22 1[22 1[25 17[39 36 1[33 4[39
3[36 21[17 45[{}19 50.000000 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 617 286 a Fy(On-Line)12 b(Computer)g(Graphics)g(Notes)p
617 305 752 2 v 847 430 a Fx(CLIPPING)847 557 y Fw(Kenneth)g(I.)h(Joy)
556 615 y(V)m(isualization)f(and)g(Graphics)h(Research)g(Group)659
673 y(Department)e(of)h(Computer)g(Science)683 731 y(University)g(of)g
(California,)g(Davis)18 980 y Fx(1)60 b(Overview)18 1102
y Fv(The)12 b(primary)h(use)f(of)g(clipping)f(in)h(computer)g(graphics)
g(is)g(to)f(remove)i(objects,)f(lines)g(or)g(line)g(segments)g(that)g
(are)h(out-)18 1177 y(side)f(the)g(viewing)e(volume.)19
b(The)12 b(viewing)d(transformation)p 580 1194 426 2
v 12 w(is)i(insensitive)f(to)i(the)g(position)e(of)i(points)f(relative)
h(to)f(the)18 1252 y(viewing)e(volume)i(\261)f(especially)g(those)g
(points)f(behind)h(the)g(viewer)h(\261)g(and)f(it)h(is)f(necessary)h
(to)f(remove)h(these)g(points)e(be-)18 1327 y(fore)14
b(generating)e(the)h(view)m(.)21 b(Clipping)12 b(can)h(be)h(done)f
(either)g(in)g(three-dimensional)e(space,)k(or)e(in)g(image)g(space.)22
b(The)18 1402 y(algorithms)10 b(are)i(nearly)f(identical.)88
1478 y(In)i(this)e(paper)n(,)j(we)f(concentrate)f(on)g(clipping)e
(methods)i(for)h(polygons,)e(clipping)g(them)h(against)g(planes.)18
b(W)l(e)13 b(\256rst)18 1553 y(develop)c(an)h(\252inside/outside\272)d
(test)j(for)g(points)e(against)h(a)i(plane.)j(This)9
b(test)h(is)f(used)h(to)g(construct)e(a)j(clipping)d(algorithm)18
1628 y(for)13 b(line)f(segments,)g(and)h(the)f(line-segment)f(clipping)
g(is)h(used)g(to)g(develop)g(the)g(polygon-clipping)d(algorithm.)18
b(These)18 1703 y(methods)10 b(are)i(then)f(applied)f(to)h(generate)g
(an)g(algorithm)f(that)h(clips)f(polygons)f(in)i(the)g(viewing)f
(operation.)18 1873 y Fx(2)60 b(Inside/Outside)14 b(T)-5
b(ests)14 b(for)g(Points)g(Against)h(a)g(Plane)18 1995
y Fv(Given)10 b(a)i(plane)f(de\256ned)g(by)g(the)g(normal)g(vector)f
Fu(~)-22 b(n)11 b Fv(and)g(the)g(point)f Ft(P)p Fv(.)597
2639 y @beginspecial 54.202499 @llx 584.182495 @lly 244.914993
@urx 735.748779 @ury 1900 @rwi @setspecial
%%BeginDocument: figures/clipping-plane.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      254 106 moveto
      432 197 lineto
      297 371 lineto
      99 270 lineto
      254 106 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 256 moveto
      -96 0 atan dup cos 10 mul 240 exch sub
      exch sin 10 mul 160 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      240 160 10 4 0 -96 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      240 256 moveto
      -26 88 atan dup cos 10 mul 328 exch sub
      exch sin 10 mul 230 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      328 230 10 4 88 -26 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      240 246 moveto
      250 243 lineto
      250 253 lineto
   stroke
grestore

% OVAL
newpath 239 256 2 2 tgifellipse fill
gsave
   newpath 239 256 2 2 tgifellipse stroke
grestore

% OVAL
newpath 330 229 2 2 tgifellipse fill
gsave
   newpath 330 229 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-27.225 -22.062 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/P.dvi)
@start /Fa 1 81 df<FFFFF800FFFFFE000FC03F800FC00F800FC007C00FC007E00FC0
07E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F800FC03F000FFFFC000FC0
00000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0
00000FC00000FFFC0000FFFC00001B1C7E9B21>80 D E end
TeXDict begin

1 0 bop 320 262 a Fa(P)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

43.087 -9.051 translate 1.013 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q.dvi)
@start /Fa 1 82 df<003FE00001F07C0003C01E000F800F801F0007C01F0007C03E00
03E07E0003F07C0001F07C0001F0FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC00
01F8FC0001F8FC0001F87C0001F07C0001F07E0003F03E0003E03E0703E01F08C7C00F90
6F8003D07E0001F87C00003FF8080000380800003C1800003FF800001FF800001FF00000
0FF0000007E0000003C01D247D9B24>81 D E end
TeXDict begin

1 0 bop 320 262 a Fa(Q)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-18.338 49.375 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/nv.dvi)
@start /Fa 2 127 df<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03
801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>110
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(n)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:11 1999
%%EndDocument
 @endspecial eop
%%Page: 2 2
2 1 bop 18 286 a Fv(This)9 b(plane)g(separates)h(three-dimensional)e
(space)i(into)f(two)g(half-spaces:)14 b(one)c(in)f(the)h(direction)e
(of)i(the)g(normal)g(vector)n(,)18 362 y(which)e(we)g(will)g(call)g
(the)g(\252in\272)h(side)f(of)g(the)h(plane;)f(and)h(another)f(in)g
(the)g(opposite)f(direction)g(of)i(the)f(normal)g(vector)n(,)i(which)18
437 y(we)g(will)g(call)g(the)g(\252out\272)g(side.)k(If)d(we)g(have)f
(a)h(point)e Ft(Q)i Fv(in)f(the)g(plane)g(then)f(the)h(vector)h
Fu(<)i Ft(Q)8 b Fs(\000)g Ft(P)k Fu(>)f Fv(is)f(perpendicular)g(to)18
512 y(the)h(normal)g(vector)f Fu(~)-22 b(n)p Fv(,)12
b(that)e(is)802 632 y Fu(<)j Ft(Q)d Fs(\000)g Ft(P)j
Fu(>)g Fs(\001)o Fu(~)-22 b(n)22 b Fr(=)h(0)18 753 y
Fv(For)11 b(an)h(arbitrary)f(point)e Ft(Q)j Fv(in)f(three-dimensional)e
(space,)j(this)e(dot)g(product)h(satis\256es)599 874
y Fu(<)i Ft(Q)d Fs(\000)h Ft(P)h Fu(>)h Fs(\001)o Fu(~)-22
b(n)23 b Fr(=)g Fs(j)12 b Fu(<)h Ft(Q)d Fs(\000)h Ft(P)h
Fu(>)h Fs(jj)o Fu(~)-22 b(n)p Fs(j)8 b Fr(cos)e Fu(\022)18
995 y Fv(where)k Fu(\022)h Fv(is)e(the)g(angle)g(between)g(the)g
(vectors)e Fu(~)-21 b(n)10 b Fv(and)f Fu(<)k Ft(Q)5 b
Fs(\000)g Ft(P)13 b Fu(>)p Fv(.)j(So)9 b(if)g(the)h(point)e
Ft(Q)h Fv(is)g(on)g(the)g(\252in\272)h(side)f(of)g(the)g(plane,)18
1070 y(the)h(angle)h Fu(\022)h Fv(must)f(satisfy)e Fr(0)k
Fs(\024)g Fu(\022)h(<)628 1052 y Fq(\031)p 628 1059 22
2 v 630 1085 a Fp(2)654 1070 y Fv(,)e(and)e Fr(cos)e
Fu(\022)k Fv(must)e(be)h(positive.)j(Since)c(the)h(dot)f(product)g(is)g
(positive)f(if)i(and)f(only)18 1145 y(if)j Fr(cos)8 b
Fu(\022)15 b Fv(is)e(positive,)f(this)h(says)g(that)f(the)i(point)e(is)
h(on)g(the)g(\252in\272)g(side)g(of)h(the)f(plane)g(if)g(and)g(only)g
(if)g(the)g(dot)g(product)g(is)18 1220 y(positive.)k(This)12
b(case)h(is)f(illustrated)f(in)h(the)g(\256gure)h(below)m(,)f(where)h
(the)f(\256gure)h(has)f(been)h(drawn)f(with)g(the)g(eyepoint)f(on)18
1295 y(the)g(surface)g(of)h(the)f(plane.)466 1992 y @beginspecial
69.258743 @llx 613.291260 @lly 323.207489 @urx 777.906250
@ury 2530 @rwi @setspecial
%%BeginDocument: figures/clipping-1.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      384 256 moveto
      -128 64 atan dup cos 10 mul 448 exch sub
      exch sin 10 mul 128 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      448 128 10 4 64 -128 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      384 256 moveto
      -192 -64 atan dup cos 10 mul 320 exch sub
      exch sin 10 mul 64 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      320 64 10 4 -64 -192 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      512 320 moveto
      128 128 lineto
   stroke
grestore

% OVAL
newpath 319 62 3 3 tgifellipse fill
gsave
   newpath 319 62 3 3 tgifellipse stroke
grestore

% ARC
gsave
   newpath
      384 256 29 29 -63 -109 tgifarc
   stroke
grestore

% OVAL
newpath 383 255 3 3 tgifellipse fill
gsave
   newpath 383 255 3 3 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

57.150 -23.188 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/P.dvi)
@start /Fa 1 81 df<FFFFF800FFFFFE000FC03F800FC00F800FC007C00FC007E00FC0
07E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F800FC03F000FFFFC000FC0
00000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0
00000FC00000FFFC0000FFFC00001B1C7E9B21>80 D E end
TeXDict begin

1 0 bop 320 262 a Fa(P)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

68.062 12.250 translate 0.984 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/theta.dvi)
@start /Fa 1 19 df<007800CC0186030606060E060C061C07180738063806300E700E
700E7FFEE01CE01CE01CE018E038C038C070C060C060C0C0C180618062003C00101D7E9C
13>18 D E end
TeXDict begin

1 0 bop 320 262 a Fa(\022)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

17.212 93.886 translate 1.013 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q.dvi)
@start /Fa 1 82 df<003FE00001F07C0003C01E000F800F801F0007C01F0007C03E00
03E07E0003F07C0001F07C0001F0FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC00
01F8FC0001F8FC0001F87C0001F07C0001F07E0003F03E0003E03E0703E01F08C7C00F90
6F8003D07E0001F87C00003FF8080000380800003C1800003FF800001FF800001FF00000
0FF0000007E0000003C01D247D9B24>81 D E end
TeXDict begin

1 0 bop 320 262 a Fa(Q)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

104.287 68.500 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/nv.dvi)
@start /Fa 2 127 df<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03
801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>110
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(n)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-60.413 66.250 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/in.dvi)
@start /Fa 2 111 df<1C003C003C001800000000000000000000000E007E00FE001E00
1E001E001E001E001E001E001E001E001E001E001E001E001E003E00FF80091C7F9B0C>
105 D<0E3E00FE7F007EC7801F07C01E03C01E03C01E03C01E03C01E03C01E03C01E03C0
1E03C01E03C01E03C01E03C01E03C01E03C01E07C07F8FF01413809215>110
D E end
TeXDict begin

1 0 bop 320 262 a Fa(in)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-74.812 51.188 translate 0.984 0.984 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/out.dvi)
@start /Fa 3 118 df<03F8000E1E001C0F003807807807C07003C0F003E0F003E0F001
E0F001E0F001E0F801E0F801E07801C07803C03C03801C07000F1E0003F80013137F9215
>111 D<04000C001C003C003C00FFC03C003C003C003C003C003C003C003C003C003C00
3C003C003C003C003C003C401FC01F000A187F970C>116 D<FE1FC03E07C01E03C01E03
C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E07
C01F1FC00FF3F007E3801413809215>I E end
TeXDict begin

1 0 bop 320 262 a Fa(out)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

149.917 -38.301 translate 0.990 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/plane.dvi)
@start /Fa 5 113 df<0FF0001C7800383C00781C00781E00781E00201E00007E0001DE
00071E001C1E00381E00781E00781E00F81E00F83E007C7EC07FDF803F0F0012137F9212
>97 D<07F0000FF800183C00301E00701F00601F00FFFF00E00000E00000E00000F00000
F00000F00180F801007803007E0E003FFC001FF8000FE00011137F9212>101
D<02001E00FE003E001E001E001E001E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001E001E001E001E003F00FFC00A1D7F9C0C>108
D<0E3E00FE7F007EC7801F07C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03
C01E03C01E03C01E03C01E03C01E03C01E07C07F8FF01413809215>110
D<0E3E007EFF807F8FC01F03E01E01E01E01F01E01F01E00F01E00F01E00F01E00F01E00
F01E00F01E01E01E01E01E01C01F03801F87001EFC001E00001E00001E00001E00001E00
001E00001E00003F0000FFE000141C809215>112 D E end
TeXDict begin

1 0 bop 320 262 a Fa(plane)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% POLY/OPEN-SPLINE
gsave
   newpath
      520 278 moveto
      496.00 278.00 480.67 284.00
      18 -10 atan dup cos 8 mul 474 exch sub
      exch sin 8 mul 296 exch sub curveto
   stroke
grestore
gsave
   newpath
      474 296 8 3 -10 18 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:14 1999
%%EndDocument
 @endspecial 18 2067 a(Alternatively)h(if)h(the)g(point)f
Ft(Q)i Fv(is)g(on)f(the)g(\252out\272)g(side)g(of)h(the)f(plane,)h
(then)f(the)g(angle)h(between)f(the)g(vectors)f Fu(~)-22
b(n)14 b Fv(and)g Fu(<)18 2142 y Ft(Q)6 b Fs(\000)g Ft(P)13
b Fu(>)d Fv(satis\256es)357 2125 y Fq(\031)p 357 2132
V 359 2158 a Fp(2)396 2142 y Fu(<)j(\022)h Fs(\024)f
Fu(\031)r Fv(,)e(and)e Fr(cos)e Fu(\022)12 b Fv(is)d(negative.)14
b(It)c(follows)e(that)h(the)h(point)e(is)h(on)g(the)h(\252out\272)f
(side)g(of)h(the)f(plane)18 2218 y(if)i(and)g(only)f(if)h(the)g(dot)g
(product)f(is)h(negative.)88 2293 y(These)g(facts)h(can)f(be)g
(combined)g(to)g(form)g(an)h(inside/outsi)o(de)d(test)h(for)h(points)f
(against)g(a)i(plane:)86 2405 y Fs(\017)23 b Fv(A)8 b(point)g
Ft(Q)h Fv(is)f(de\256ned)h(to)f(be)h(on)g(the)f(\252in\272)h(side)f(of)
h(the)g(plane)f(\(the)h(side)f(of)h(the)f(plane)h(to)f(which)g(the)h
(normal)f(vector)132 2480 y(points\))h(if)858 2601 y
Fu(<)k Ft(Q)e Fs(\000)f Ft(P)j Fu(>)g Fs(\001)o Fu(~)-22
b(n)22 b(>)h Fr(0)982 2765 y Fv(2)p eop
%%Page: 3 3
3 2 bop 86 286 a Fs(\017)23 b Fv(A)11 b(point)f Ft(Q)h
Fv(is)g(de\256ned)g(to)g(be)g(on)g(the)g(\252out\272)g(side)f(of)h(the)
g(plane)g(if)858 407 y Fu(<)i Ft(Q)e Fs(\000)f Ft(P)j
Fu(>)g Fs(\001)o Fu(~)-22 b(n)22 b(<)h Fr(0)86 547 y
Fs(\017)g Fv(A)11 b(point)f Ft(Q)h Fv(is)g(\252on\272)g(the)g(plane)g
(if)858 667 y Fu(<)i Ft(Q)e Fs(\000)f Ft(P)j Fu(>)g Fs(\001)o
Fu(~)-22 b(n)22 b Fr(=)h(0)p 243 807 1500 3 v 88 932
a Fv(W)l(e)10 b(note)e(that)h(the)f(third)g(case)i Fu(<)j
Ft(Q)t Fs(\000)t Ft(P)g Fu(>)g Fs(\001)o Fu(~)-22 b(n)13
b Fr(=)g(0)8 b Fv(happens)g(infrequently)g(when)g(using)g(\257oating)g
(point)g(arithmetic)18 1007 y(on)j(computer)g(systems.)j(Normally)d
(this)f(must)h(be)g(approximated)f(by)795 1128 y Fs(j)i
Fu(<)h Ft(Q)e Fs(\000)f Ft(P)i Fu(>)h Fs(\001)o Fu(~)-22
b(n)p Fs(j)12 b Fu(<)h(\017)18 1248 y Fv(where)e Fu(\017)h
Fv(is)f(a)g(predetermined)g(\(small\))g(constant.)18
1419 y Fx(3)60 b(Clipping)14 b(Line)g(Segments)h(Against)g(a)f(Plane)18
1541 y Fv(The)e(inside/outsi)o(de)d(test)i(forms)h(the)g(basis)f(for)h
(clipping)e(line)h(segments)g(against)g(a)h(plane.)17
b(Let)12 b Fs(P)j Fv(be)d(a)h(plane)e(de\256ned)18 1616
y(by)f(the)h(normal)g(vector)e Fu(~)-22 b(n)12 b Fv(and)e(the)h(point)f
Ft(P)g Fv(and)h(let)p 872 1579 118 2 v 11 w Ft(Q)911
1623 y Fp(1)931 1616 y Ft(Q)970 1623 y Fp(2)1001 1616
y Fv(be)g(the)f(line)g(segment)h(de\256ned)g(by)f(the)h(two)f(points)f
Ft(Q)1871 1623 y Fp(1)1902 1616 y Fv(and)18 1691 y Ft(Q)57
1698 y Fp(2)77 1691 y Fv(,)j(as)f(is)g(shown)f(in)g(the)h(following)e
(\256gure)482 2447 y @beginspecial 69.258743 @llx 598.234985
@lly 315.177490 @urx 776.902527 @ury 2450 @rwi @setspecial
%%BeginDocument: figures/clipping-2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      384 256 moveto
      -128 64 atan dup cos 8 mul 448 exch sub
      exch sin 8 mul 128 exch sub lineto
   stroke
grestore
gsave
   newpath
      448 128 8 3 64 -128 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      384 256 moveto
      -191 -62 atan dup cos 8 mul 322 exch sub
      exch sin 8 mul 65 exch sub lineto
   stroke
grestore
gsave
   newpath
      322 65 8 3 -62 -191 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      512 320 moveto
      128 128 lineto
   stroke
grestore

% OVAL
newpath 320 62 3 3 tgifellipse fill
gsave
   newpath 320 62 3 3 tgifellipse stroke
grestore

% ARC
gsave
   newpath
      384 256 29 29 -63 -109 tgifarc
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      384 256 moveto
      62 -125 atan dup cos 8 mul 259 exch sub
      exch sin 8 mul 318 exch sub lineto
   stroke
grestore
gsave
   newpath
      259 318 8 3 -125 62 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      320 64 moveto
      256 320 lineto
   stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-59.288 65.688 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/in.dvi)
@start /Fa 2 111 df<1C003C003C001800000000000000000000000E007E00FE001E00
1E001E001E001E001E001E001E001E001E001E001E001E001E003E00FF80091C7F9B0C>
105 D<0E3E00FE7F007EC7801F07C01E03C01E03C01E03C01E03C01E03C01E03C01E03C0
1E03C01E03C01E03C01E03C01E03C01E03C01E07C07F8FF01413809215>110
D E end
TeXDict begin

1 0 bop 320 262 a Fa(in)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-74.812 47.812 translate 0.984 0.984 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/out.dvi)
@start /Fa 3 118 df<03F8000E1E001C0F003807807807C07003C0F003E0F003E0F001
E0F001E0F001E0F801E0F801E07801C07803C03C03801C07000F1E0003F80013137F9215
>111 D<04000C001C003C003C00FFC03C003C003C003C003C003C003C003C003C003C00
3C003C003C003C003C003C401FC01F000A187F970C>116 D<FE1FC03E07C01E03C01E03
C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E07
C01F1FC00FF3F007E3801413809215>I E end
TeXDict begin

1 0 bop 320 262 a Fa(out)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

20.652 93.324 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 284 206 3 3 tgifellipse fill
gsave
   newpath 284 206 3 3 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-1.312 28.000 translate 1.031 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/I.dvi)
@start /Fa 1 74 df<FFFFFFFF07E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101C7F9B12>
73 D E end
TeXDict begin

1 0 bop 320 262 a Fa(I)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 255 319 3 3 tgifellipse fill
gsave
   newpath 255 319 3 3 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-20.411 -70.926 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 383 255 3 3 tgifellipse fill
gsave
   newpath 383 255 3 3 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

61.087 -23.188 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/P.dvi)
@start /Fa 1 81 df<FFFFF800FFFFFE000FC03F800FC00F800FC007C00FC007E00FC0
07E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F800FC03F000FFFFC000FC0
00000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0
00000FC00000FFFC0000FFFC00001B1C7E9B21>80 D E end
TeXDict begin

1 0 bop 320 262 a Fa(P)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

68.062 12.812 translate 0.984 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/theta.dvi)
@start /Fa 1 19 df<007800CC0186030606060E060C061C07180738063806300E700E
700E7FFEE01CE01CE01CE018E038C038C070C060C060C0C0C180618062003C00101D7E9C
13>18 D E end
TeXDict begin

1 0 bop 320 262 a Fa(\022)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

102.037 68.500 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/nv.dvi)
@start /Fa 2 127 df<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03
801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>110
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(n)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

142.042 -36.614 translate 0.990 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/plane.dvi)
@start /Fa 5 113 df<0FF0001C7800383C00781C00781E00781E00201E00007E0001DE
00071E001C1E00381E00781E00781E00F81E00F83E007C7EC07FDF803F0F0012137F9212
>97 D<07F0000FF800183C00301E00701F00601F00FFFF00E00000E00000E00000F00000
F00000F00180F801007803007E0E003FFC001FF8000FE00011137F9212>101
D<02001E00FE003E001E001E001E001E001E001E001E001E001E001E001E001E001E001E
001E001E001E001E001E001E001E001E001E003F00FFC00A1D7F9C0C>108
D<0E3E00FE7F007EC7801F07C01E03C01E03C01E03C01E03C01E03C01E03C01E03C01E03
C01E03C01E03C01E03C01E03C01E03C01E07C07F8FF01413809215>110
D<0E3E007EFF807F8FC01F03E01E01E01E01F01E01F01E00F01E00F01E00F01E00F01E00
F01E00F01E01E01E01E01E01C01F03801F87001EFC001E00001E00001E00001E00001E00
001E00001E00003F0000FFE000141C809215>112 D E end
TeXDict begin

1 0 bop 320 262 a Fa(plane)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% POLY/OPEN-SPLINE
gsave
   newpath
      508 274 moveto
      484.00 274.00 469.33 279.67
      17 -8 atan dup cos 8 mul 464 exch sub
      exch sin 8 mul 291 exch sub curveto
   stroke
grestore
gsave
   newpath
      464 291 8 3 -8 17 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:17 1999
%%EndDocument
 @endspecial 18 2522 a(Let)i Fu(d)114 2529 y Fp(1)159
2522 y Fr(=)g Fu(<)k Ft(Q)294 2529 y Fp(1)325 2522 y
Fs(\000)c Ft(P)k Fu(>)g Fs(\001)o Fu(~)-22 b(n)12 b Fv(and)f
Fu(d)625 2529 y Fp(2)670 2522 y Fr(=)g Fu(<)k Ft(Q)805
2529 y Fp(2)836 2522 y Fs(\000)c Ft(P)j Fu(>)h Fs(\001)o
Fu(~)-22 b(n)p Fv(.)17 b(W)l(e)c(can)f(determine)g(how)f(the)g(line)g
(segment)h(is)f(clipped)18 2597 y(by)g(examining)f(four)h(cases:)982
2765 y(3)p eop
%%Page: 4 4
4 3 bop 75 286 a Fv(1.)23 b(Both)9 b(points)g Ft(Q)391
293 y Fp(1)422 286 y Fv(and)h Ft(Q)537 293 y Fp(2)567
286 y Fv(are)h(on)f(the)g(\252in\272)h(side)e(on)h(the)g(plane)g(\261)h
(that)e(is,)i(the)f(line)f(segment)h(is)g(completely)g(\252in\272.)75
399 y(2.)23 b(Both)13 b(points)g Ft(Q)399 406 y Fp(1)433
399 y Fv(and)h Ft(Q)552 406 y Fp(2)586 399 y Fv(are)h(on)e(the)h
(\252out\272)g(side)f(on)h(the)g(plane)f(\261)h(that)g(is,)g(the)g
(line)g(segment)f(is)h(completely)132 474 y(\252out\272.)75
586 y(3.)23 b Ft(Q)171 593 y Fp(1)200 586 y Fv(is)9 b(on)g(the)h
(\252in\272)f(side)g(of)h(the)f(plane)g(and)h Ft(Q)865
593 y Fp(2)894 586 y Fv(is)f(on)h(the)f(\252out\272)g(side)g(\261)g(in)
g(which)g(case)h(the)g(line)e(segment)i(crosses)132 661
y(the)g(plane.)15 b(\(This)c(is)f(the)h(case)h(for)f(the)g(\256gure)h
(above.\))75 774 y(4.)23 b Ft(Q)171 781 y Fp(2)201 774
y Fv(is)10 b(on)g(the)g(\252in\272)g(side)g(of)g(the)h(plane)f(and)g
Ft(Q)873 781 y Fp(1)903 774 y Fv(is)g(on)g(the)g(\252out\272)g(side)g
(\261)g(so)g(again,)h(the)f(line)g(segment)g(crosses)f(the)132
849 y(plane.)88 961 y(W)l(e)i(analyze)e(these)h(cases)g(one)f(at)h(a)g
(time.)15 b(Clearly)9 b(the)h(side)f(of)h(the)f(plane)g(on)h(which)f
Ft(Q)1500 968 y Fp(1)1529 961 y Fv(lies)g(is)h(determined)f(by)g(the)18
1037 y(sign)h(of)h Fu(d)178 1044 y Fp(1)198 1037 y Fv(,)g(and)g
(similarly)m(,)g(the)g(sign)f(of)h Fu(d)706 1044 y Fp(2)737
1037 y Fv(determines)g(the)g(side)f(of)h(the)g(plane)g(on)g(which)f
Ft(Q)1543 1044 y Fp(2)1575 1037 y Fv(lies.)86 1161 y
Fs(\017)23 b Fo(Case)10 b(I)h Fv(\261)g Fu(d)323 1168
y Fp(1)355 1161 y Fu(>)p Fr(=)j(0)d Fv(and)g Fu(d)574
1168 y Fp(2)606 1161 y Fu(>)i Fr(0)p Fv(,)e(or)h Fu(d)773
1168 y Fp(1)805 1161 y Fu(>)h Fr(0)e Fv(and)g Fu(d)988
1168 y Fp(2)1020 1161 y Fu(>)p Fr(=)i(0)p Fv(.)132 1255
y(In)e(this)f(case)h(the)g(line)g(segment)p 657 1219
118 2 v 11 w Ft(Q)696 1262 y Fp(1)716 1255 y Ft(Q)755
1262 y Fp(2)786 1255 y Fv(is)g(on)g(the)f(\252in\272)i(side)e(of)h(the)
g(plane.)86 1368 y Fs(\017)23 b Fo(Case)10 b(II)h Fv(\261)g
Fu(d)341 1375 y Fp(1)373 1368 y Fu(<)p Fr(=)i(0)f Fv(and)f
Fu(d)592 1375 y Fp(2)624 1368 y Fu(<)i Fr(0)p Fv(,)e(or)g
Fu(d)790 1375 y Fp(1)822 1368 y Fu(<)i Fr(0)e Fv(and)g
Fu(d)1005 1375 y Fp(2)1037 1368 y Fu(<)p Fr(=)j(0)p Fv(.)132
1461 y(In)d(this)f(case)h(the)g(line)g(segment)g(is)f(on)h(the)g
(\252out\272)g(side)g(of)g(the)g(plane.)86 1574 y Fs(\017)23
b Fo(Case)10 b(III)h Fv(\261)g Fu(d)359 1581 y Fp(1)391
1574 y Fu(>)i Fr(0)e Fv(and)g Fu(d)574 1581 y Fp(2)606
1574 y Fu(<)i Fr(0)132 1668 y Fv(In)e(this)f(case,)j
Ft(Q)399 1675 y Fp(1)430 1668 y Fv(lies)e(on)g(the)g(\252in\272)g(side)
g(of)h(the)f(plane,)g(and)g Ft(Q)1155 1675 y Fp(2)1187
1668 y Fv(lies)g(on)g(the)g(\252out\272)g(side)g(of)g(the)g(plane)g
(\(the)h(case)132 1743 y(shown)d(in)i(the)f(illustration\).)j
(Calculate)d(the)h(intersection)e Ft(I)h Fv(of)h(the)g(line)f(and)h
(the)f(plane)g(by)h(\256rst)g(noting)e(that)h Ft(I)h
Fv(is)132 1818 y(a)g(point)f(on)h(the)g(line)p 471 1781
V 10 w Ft(Q)510 1825 y Fp(1)530 1818 y Ft(Q)569 1825
y Fp(2)589 1818 y Fv(,)h(and)f(can)g(be)h(represented)e(in)h(the)g
(form)785 1939 y Ft(I)23 b Fr(=)g Ft(Q)925 1946 y Fp(1)955
1939 y Fr(+)10 b Fu(t)k(<)e Ft(Q)1116 1946 y Fp(2)1154
1939 y Fs(\000)18 b Ft(Q)1246 1946 y Fp(1)1279 1939 y
Fu(>)132 2059 y Fv(T)m(o)10 b(determine)h Fu(t)p Fv(,)i(we)e(\256rst)g
(subtract)f(the)h(identity)812 2180 y Ft(P)23 b Fr(=)g
Ft(P)10 b Fr(+)g Fu(t)j(<)g Ft(P)k Fs(\000)i Ft(P)12
b Fu(>)132 2301 y Fv(from)f(both)f(sides)h(of)g(the)g(equation)f(for)h
Ft(I)p Fv(,)h(giving)461 2422 y Fu(<)h Ft(I)d Fs(\000)h
Ft(P)h Fu(>)e Fr(=)h Fu(<)i Ft(Q)811 2429 y Fp(1)841
2422 y Fs(\000)d Ft(P)j Fu(>)g Fr(+)p Fu(t)p Fr(\()p
Fu(<)g Ft(Q)1139 2429 y Fp(2)1169 2422 y Fs(\000)e Ft(P)h
Fu(>)21 b Fs(\000)f Fu(<)13 b Ft(Q)1461 2429 y Fp(1)1491
2422 y Fs(\000)e Ft(P)h Fu(>)p Fr(\))982 2765 y Fv(4)p
eop
%%Page: 5 5
5 4 bop 132 286 a Fv(Since)12 b Ft(I)g Fv(an)h Ft(P)f
Fv(are)h(both)f(in)g(the)g(plane,)g Fu(<)17 b Ft(I)12
b Fs(\000)g Ft(P)k Fu(>)d Fv(is)f(a)h(vector)f(perpendicular)f(to)g
Fu(~)-22 b(n)q Fv(.)19 b(So)12 b(dotting)f(both)g(sides)132
362 y(with)f(the)h(normal)g(vector)f Fu(~)-22 b(n)11
b Fv(gives)481 481 y Fr(0)h(=)p Fu(<)i Ft(I)c Fs(\000)g
Ft(P)i Fu(>)h Fs(\001)o Fu(~)-22 b(n)516 568 y Fr(=)p
Fu(<)14 b Ft(Q)639 575 y Fp(1)669 568 y Fs(\000)c Ft(P)j
Fu(>)g Fs(\001)o Fu(~)-22 b(n)10 b Fr(+)g Fu(t)p Fr(\()p
Fu(<)j Ft(Q)1027 575 y Fp(2)1057 568 y Fs(\000)e Ft(P)h
Fu(>)h Fs(\001)o Fu(~)-22 b(n)7 b Fs(\000)21 b Fu(<)13
b Ft(Q)1389 575 y Fp(1)1419 568 y Fs(\000)e Ft(P)h Fu(>)h
Fs(\001)o Fu(~)-22 b(n)p Fr(\))516 656 y(=)13 b Fu(d)588
663 y Fp(1)618 656 y Fr(+)d Fu(t)p Fr(\()p Fu(d)721 663
y Fp(2)751 656 y Fs(\000)g Fu(d)820 663 y Fp(1)840 656
y Fr(\))132 775 y Fv(and)h(solving)e(for)i Fu(t)p Fv(,)h(we)g(see)f
(that)925 895 y Fu(t)23 b Fr(=)1077 864 y Fu(d)1101 871
y Fp(1)p 1027 884 143 2 v 1027 926 a Fu(d)1051 933 y
Fp(1)1081 926 y Fs(\000)10 b Fu(d)1150 933 y Fp(2)132
1021 y Fv(Once)g(we)g(have)g(calculated)g Ft(I)p Fv(,)g(we)h(can)f(say)
g(that)g(the)f(line)h(segment)p 1226 985 79 2 v 10 w
Ft(Q)1265 1028 y Fp(1)1285 1021 y Ft(I)g Fv(lies)f(on)h(the)g
(\252in\272)g(side)f(of)i(the)f(plane)f(and)132 1097
y(the)h(line)h(segment)p 441 1060 V 11 w Ft(IQ)500 1104
y Fp(2)531 1097 y Fv(lies)g(on)f(the)h(\252out\272)g(side)g(of)g(the)g
(plane.)86 1208 y Fs(\017)23 b Fo(Case)10 b(IV)h Fv(\261)g
Fu(d)356 1215 y Fp(1)388 1208 y Fu(<)i Fr(0)e Fv(and)g
Fu(d)571 1215 y Fp(2)603 1208 y Fu(>)i Fr(0)132 1302
y Fv(In)d(this)f(case,)i Ft(Q)395 1309 y Fp(1)425 1302
y Fv(lies)f(on)g(the)f(\252out\272)h(side)g(of)g(the)g(plane,)g(and)g
Ft(Q)1162 1309 y Fp(2)1193 1302 y Fv(lies)f(on)h(the)g(\252in\272)g
(side)g(of)g(the)g(plane.)k(Calculate)132 1377 y(the)c(intersection)g
Ft(I)h Fv(of)g(the)g(line)g(and)g(the)g(plane)f(by)822
1496 y Ft(I)22 b Fr(=)i Ft(Q)962 1503 y Fp(1)992 1496
y Fr(+)10 b Fu(t)p Fr(\()p Ft(Q)1110 1503 y Fp(2)1148
1496 y Fs(\000)18 b Ft(Q)1240 1503 y Fp(1)1260 1496 y
Fr(\))132 1616 y Fv(and)11 b(with)f(calculations)f(similar)i(to)g
(those)f(above,)h(we)h(obtain)925 1735 y Fu(t)23 b Fr(=)1077
1704 y Fu(d)1101 1711 y Fp(1)p 1027 1725 143 2 v 1027
1766 a Fu(d)1051 1773 y Fp(1)1081 1766 y Fs(\000)10 b
Fu(d)1150 1773 y Fp(2)132 1862 y Fv(Once)h(we)h(have)g(calculated)f
Ft(I)p Fv(,)h(we)g(can)g(state)f(that)g(the)g(line)g(segment)p
1267 1825 79 2 v 12 w Ft(Q)1306 1869 y Fp(1)1326 1862
y Ft(I)g Fv(lies)g(on)h(the)f(\252out\272)g(side)g(of)h(the)f(plane)132
1937 y(and)g(the)f(line)h(segment)p 518 1900 V 11 w Ft(IQ)577
1944 y Fp(2)608 1937 y Fv(lies)g(on)f(the)h(\252in\272)g(side)g(of)g
(the)g(plane.)p 243 2061 1500 3 v 88 2184 a(There)i(is)e(one)h
(additional)e(case)i(that)f(should)g(be)h(considered.)k(This)11
b(happens)g(when)h Fu(d)1494 2191 y Fp(1)1529 2184 y
Fr(=)j(0)d Fv(and)g Fu(d)1716 2191 y Fp(2)1750 2184 y
Fr(=)k(0)p Fv(.)h(In)12 b(this)18 2259 y(case,)g(the)f(line)f(segment)p
428 2223 118 2 v 11 w Ft(Q)467 2266 y Fp(1)487 2259 y
Ft(Q)526 2266 y Fp(2)558 2259 y Fv(lies)g(\252in\272)h(the)g(plane.)p
243 2383 1500 3 v 88 2506 a(If)h(we)f(examine)h(this)e(closely)m(,)g
(we)i(see)f(that)g(the)g(quantities)868 2626 y Fu(t)23
b Fr(=)1020 2595 y Fu(d)1044 2602 y Fp(1)p 970 2615 143
2 v 970 2657 a Fu(d)994 2664 y Fp(1)1024 2657 y Fs(\000)10
b Fu(d)1093 2664 y Fp(2)982 2765 y Fv(5)p eop
%%Page: 6 6
6 5 bop 18 286 a Fv(make)12 b(sense.)j(When)10 b(we)i(write)e(the)h
(equation)f Ft(I)i Fr(=)h Ft(Q)895 293 y Fp(1)925 286
y Fr(+)d Fu(t)j(<)g Ft(Q)1086 293 y Fp(2)1116 286 y Fs(\000)d
Ft(Q)1200 293 y Fp(1)1233 286 y Fu(>)p Fv(,)i Ft(I)f
Fv(lies)f(on)h(the)g(line)f(between)h Ft(Q)1801 293 y
Fp(1)1832 286 y Fv(and)g Ft(Q)1948 293 y Fp(2)18 362
y Fv(when)g Fr(0)k Fs(\024)g Fu(t)g Fs(\024)g Fr(1)p
Fv(,)e(and)e(indeed)h(the)f(values)787 343 y Fq(d)805
348 y Fn(1)p 755 351 99 2 v 755 377 a Fq(d)773 382 y
Fn(1)791 377 y Fm(\000)p Fq(d)836 382 y Fn(2)871 362
y Fv(are)h(numbers)g(between)f(zero)h(and)g(one.)17 b(For)12
b(example,)h(in)e(case)i(III)18 437 y(we)d(have)g(that)f
Fu(d)279 444 y Fp(1)311 437 y Fu(>)k Fr(0)d Fv(and)g
Fu(d)492 444 y Fp(2)524 437 y Fu(<)j Fr(0)p Fv(,)d(so)g(the)f
(denominator)g(of)h(the)g(fraction)f(is)h(greater)g(than)f(the)h
(numerator)n(.)k(In)c(case)g(IV)-6 b(,)18 512 y Fu(d)42
519 y Fp(1)77 512 y Fu(<)15 b Fr(0)d Fv(and)g Fu(d)264
519 y Fp(2)299 512 y Fu(>)j Fr(0)p Fv(,)e(so)e(the)h(denominator)f(of)h
(the)g(fraction)f(is)h(less)f(than)g(the)h(numerator)g(in)g(value,)g
(but)f(the)h(signs)e(on)18 587 y(both)g(are)h(negative)f(and)h(the)f
(denominator)g(is)g(greater)h(in)g(absolute)e(value,)i(again)f
(implying)g(that)g(the)g(result)g(is)g(between)18 662
y(zero)h(and)g(one.)18 833 y Fx(4)60 b(Clipping)14 b(a)h(Convex)f
(Polygon)18 954 y Fv(W)l(e)e(can)g(utilize)f(the)g(inside/outside)e
(test)i(and)h(the)f(line-clipping)e(algorithm)i(to)g(develop)g(an)h
(algorithm)f(for)h(clipping)e(a)18 1030 y(convex)h(polygon.)j(If)d(we)h
(consider)e(the)h(vertices)g(of)g(the)g(polygon)f(one-at-a-time)h(and)g
(keep)h(track)f(of)g(when)g(the)g(edges)18 1105 y(of)g(the)g(polygon)e
(cross)i(the)g(plane,)g(the)g(algorithm)f(is)h(actually)f(quite)h
(simple.)88 1180 y(T)m(o)j(implement)h(this)e(polygon)f(clipping)h
(algorithm,)i(we)f(usually)f(keep)i(a)f(list)g(of)g(points,)g(commonly)
g(called)g(the)18 1255 y(\252in\272)e(list,)f(which)g(holds)g(the)h
(resulting)e(clipped)h(polygon.)16 b(The)c(algorithm)f(then)g(iterates)
h(through)e(the)i(vertices)f(of)h(the)18 1330 y(polygon,)e(and)h(has)g
(the)f(following)g(steps:)86 1442 y Fs(\017)23 b Fv(A)11
b(vertex)g(is)f(on)h(the)g(\252in\272)g(side)g(of)g(the)g(plane)g(is)f
(retained)h(in)g(the)g(\252in\272)g(list.)86 1555 y Fs(\017)23
b Fv(A)11 b(vertex)g(is)f(on)h(the)g(\252out\272)g(side)f(of)i(the)f
(plane)f(is)h(discarded.)86 1667 y Fs(\017)23 b Fv(If)11
b(a)g(vertex)g Ft(P)g Fv(is)f(on)h(the)f(\252in\272)h(side)f(of)h(the)g
(plane,)g(and)g(the)f(previous)g(vertex)h(in)f(our)h(iteration)e(was)i
(on)g(the)f(\252out\272)132 1742 y(side,)g(the)g(point-of-intersection)
d Ft(I)j Fv(of)g(the)g(edge)g(and)g(the)g(plane)g(is)f(calculated)h
(and)g(placed)g(on)g(the)f(\252in\272)h(list.)k(The)132
1817 y(vertex)c Ft(P)i Fv(is)e(then)h(placed)g(on)g(the)g(\252in\272)g
(list.)86 1930 y Fs(\017)23 b Fv(If)13 b(a)h(vertex)f(is)f(on)h(the)g
(\252out\272)g(side)f(of)h(the)g(plane,)h(and)f(the)f(previous)g
(vertex)h(in)g(our)g(iteration)f(was)h(on)f(the)h(\252in\272)132
2005 y(side,)d(the)g(point-of-intersection)d Ft(I)j Fv(of)g(the)g(edge)
g(and)g(the)g(plane)g(is)f(calculated)h(and)g(placed)g(on)g(the)f
(\252in\272)h(list.)k(The)132 2080 y(vertex)c(is)h(discarded.)18
2192 y(This)f(algorithm)g(can)h(be)g(implemented)g(with)f(a)h(single)f
(loop)g(through)f(the)i(points)e(of)i(the)g(polygon.)j(The)c(only)g
(problem)18 2268 y(is)f(that)g(the)h(edges)f(are)h(de\256ned)g(by)f
(two)g(points,)g(and)h(so)f(we)h(must)f(retain)g(two)g(dot)g(products)g
(to)g(make)h(our)g(comparisons.)18 2343 y(The)h(algorithm)f(is)h
(illustrated)e(in)i(the)g(following)e(pseudo-code)h(algorithm.)982
2765 y(6)p eop
%%Page: 7 7
7 6 bop 461 287 a Fl(Clipping)9 b(Algorithm)503 374 y(Given)h
Fk(a)h(plane)g(de\256ned)f(by)f Fj(~)-20 b(n)10 b Fk(and)h
Fi(P)503 440 y Fl(Given)f Fk(vertices)h Fi(Q)795 446
y Fh(0)813 440 y Fj(;)c Fi(Q)868 446 y Fh(1)886 440 y
Fj(;)g(:::;)g Fi(Q)996 446 y Fg(n)p Ff(\000)p Fh(1)503
507 y Fl(Let)j Fj(pdot)h Fe(=)h(0)503 573 y Fl(Let)e
Fj(idot)i Fe(=)f Fj(~)-20 b(n)p Fd(\001)11 b Fj(<)g Fi(Q)827
579 y Fh(0)855 573 y Fd(\000)f Fi(P)h Fj(>)503 639 y
Fl(for)f(each)h Fk(vertex)g Fj(i)545 705 y Fl(Let)f Fj(dot)h
Fe(=)g Fj(~)-20 b(n)p Fd(\001)11 b Fj(<)h Fi(Q)855 711
y Fg(i)878 705 y Fd(\000)d Fi(P)i Fj(>)545 772 y Fl(if)e
Fj(dot)g Fd(\003)g Fj(pdot)i(<)h Fe(0)e Fl(then)586 838
y(calculate)g Fi(I)i Fe(=)g Fi(Q)863 844 y Fg(i)p Ff(\000)p
Fh(1)928 838 y Fe(+)e Fj(t)p Fe(\()p Fi(Q)1037 844 y
Fg(i)1060 838 y Fd(\000)f Fi(Q)1137 844 y Fg(i)p Ff(\000)p
Fh(1)1193 838 y Fe(\))i Fl(with)f Fj(t)h Fe(=)1420 819
y Fg(pdot)p 1384 828 136 2 v 1384 852 a(pdot)p Ff(\000)p
Fg(dot)586 904 y Fl(insert)g Fi(I)f Fk(into)f(the)h(\252in\272)h(list)
586 971 y Fl(end)g(if)545 1037 y(if)e Fj(dot)i(>)h Fe(0)e
Fl(then)586 1103 y(insert)h Fi(Q)734 1109 y Fg(i)758
1103 y Fk(into)e(the)h(\252in\272)h(list)586 1169 y Fl(end)g(if)586
1236 y(Let)f Fj(pdot)h Fe(=)h Fj(dot)545 1302 y Fl(end)e(for)503
1368 y(If)g Fj(pdot)f Fd(\003)g Fj(idot)j(<)g Fe(0)e
Fl(then)545 1434 y(calculate)g Fi(I)h Fe(=)h Fi(Q)821
1440 y Fg(n)p Ff(\000)p Fh(1)895 1434 y Fe(+)e Fj(t)p
Fe(\()p Fi(Q)1004 1440 y Fh(0)1032 1434 y Fd(\000)f Fi(Q)1109
1440 y Fg(n)p Ff(\000)p Fh(1)1174 1434 y Fe(\))i Fl(with)e
Fj(t)j Fe(=)1407 1416 y Fg(pdot)p 1365 1425 148 2 v 1365
1449 a(pdot)p Ff(\000)p Fg(idot)545 1501 y Fl(insert)e
Fi(I)h Fk(into)e(the)h(\252in\272)g(list)545 1567 y Fl(end)g(if)88
1733 y Fv(If)k Ft(Q)171 1740 y Fp(0)191 1733 y Fu(;)8
b Ft(Q)251 1740 y Fp(1)271 1733 y Fu(;)g(:::;)g Ft(Q)391
1740 y Fq(n)p Fm(\000)p Fp(1)471 1733 y Fv(are)14 b(the)f
Fu(n)h Fv(vertices)f(of)h(a)g(polygon,)e(we)i(must)f(insure)g(that)g
(the)g(last)g(edge)h(of)f(the)h(polygon,)p 18 1772 167
2 v 18 1808 a Ft(Q)57 1815 y Fq(n)p Fm(\000)p Fp(1)126
1808 y Ft(Q)165 1815 y Fp(0)185 1808 y Fv(,)e(is)f(checked.)16
b(This)11 b(is)g(the)g(reason)g(for)h(the)f(last)g(four)h(statements)e
(of)i(the)f(algorithm.)k(W)l(e)d(must)g(test)e(to)h(see)h(if)18
1884 y(the)d(last)g(line)g(segment)h(\(the)f(one)h(between)f
Ft(Q)752 1891 y Fq(n)p Fm(\000)p Fp(1)831 1884 y Fv(and)g
Ft(Q)945 1891 y Fp(0)975 1884 y Fv(crosses)g(the)g(plane,)h(and)g(if)f
(so,)h(insert)f(the)h(intersection)d(point)18 1959 y(into)j(the)h(in)g
(list.)p 243 2079 1500 3 v 88 2199 a(This)g(algorithm)g(is)g
(guaranteed)h(to)f(work)h(with)e(convex)i(polygons)d(only)i(\261)h
(non-convex)f(polygons)e(can)j(cause)g(the)18 2274 y(algorithm)e(to)h
(produce)g(some)g(false)g(edges.)18 2444 y Fx(5)60 b(Clipping)14
b(to)h(a)g(Convex)f(Polyhedra)18 2566 y Fv(The)e(three-dimensional)e
(analog)i(of)g(a)g(polygon)f(is)g(a)i(polyhedron)d(\()p
Fc(e.g.)p Fv(,)j(a)g(cube,)g(a)f(truncated)f(pyramid,)i(a)f(dodecahe-)
18 2641 y(dron\).)i(A)c(convex)f(polyhedron)e(can)j(be)f(de\256ned)h
(by)f(a)h(\256nite)f(set)g(of)g(bounding)f(planes)g Fs(P)1445
2648 y Fp(0)1465 2641 y Fu(;)g Fs(P)1518 2648 y Fp(1)1536
2641 y Fu(;)g(:::;)g Fs(P)1649 2648 y Fq(m)1689 2641
y Fv(and)h(we)h(can)g(clip)982 2765 y(7)p eop
%%Page: 8 8
8 7 bop 18 286 a Fv(against)9 b(the)g(polyhedron)f(by)i(clipping)e
(against)h(each)h(plane)f(in)h(turn)f(and)h(using)e(the)i(output)e
(polygon)g(of)i(one)f(step)g(as)h(the)18 362 y(input)g(polygon)f(to)i
(the)g(next.)j(If,)e(at)g(any)f(step,)g(the)g(output)e(polygon)g(is)i
(empty)m(,)h(then)e(the)h(process)g(terminates.)88 437
y(W)l(e)h(must)f(de\256ne)h(the)e(planes)h(so)g(that)f(the)h(normal)g
(vectors)g(point)f(toward)g(the)h(inside)f(of)h(the)g(polyhedron.)18
607 y Fx(6)60 b(Clipping)14 b(to)h(the)f(V)n(iewing)g(Pyramid)18
729 y Fv(The)7 b(viewing)f(pyramid)h(is)g(a)h(convex)f(polyhedron)f
(\261)h(as)h(is)f(the)g(image-space)g(cube.)15 b(The)7
b(algorithm)f(for)i(clipping)e(a)h(single)18 804 y(convex)13
b(polygon)f(against)g(a)i(plane)g(can)f(be)h(utilized)e(to)h(clip)g(a)h
(polygon)e(against)h(multiple)f(planes)h(of)h(these)f(regions.)18
879 y(W)l(e)f(simply)f(clip)g(against)g(the)h(planes)f(one)g(at)h(a)h
(time,)f(taking)e(the)i(output)e(polygon)g(of)i(one)g(clipping)e(step)h
(as)h(the)f(input)18 954 y(polygon)e(to)i(the)g(next)g(step.)318
1993 y @beginspecial 36.134998 @llx 550.054993 @lly 361.349976
@urx 796.977478 @ury 3240 @rwi @setspecial
%%BeginDocument: figures/viewing-pyramid-for-clipping.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      404 248 moveto
      357 210 lineto
      357 174 lineto
   stroke
   [] 0 setdash
grestore

% BOX
newpath
   382 228 moveto 400 228 lineto 400 306 lineto 382 306 lineto
closepath 1 setgray fill
0 setgray

% POLY/OPEN-SPLINE
gsave
   newpath
      192 321 moveto
      596 117 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      192 321 moveto
      639 348 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      192 321 moveto
      379 -3 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      192 321 moveto
      303 247 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      303 247 moveto
      472 135 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      303 129 moveto
      403 214 lineto
      403 332 lineto
      303 247 lineto
      303 130 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      349 234 moveto
      383 215 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 192 321 4 4 tgifellipse fill
gsave
   newpath 192 321 4 4 tgifellipse stroke
grestore

% OVAL
newpath 349 234 3 3 tgifellipse fill
gsave
   newpath 349 234 3 3 tgifellipse stroke
grestore

% OVAL
newpath 424 193 3 3 tgifellipse fill
gsave
   newpath 424 193 3 3 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      386 214 moveto
      396 209 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      396 209 moveto
      424 193 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      424 193 moveto
      492 155 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      493 155 moveto
      569 113 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      471 136 moveto
      552 81 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      356 175 moveto
      357 35 lineto
      504 164 lineto
      504 339 lineto
      404 249 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      192 321 moveto
      349 234 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 321 moveto
      69 -124 atan dup cos 10 mul 68 exch sub
      exch sin 10 mul 390 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      68 390 10 4 -124 69 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 321 moveto
      89 105 atan dup cos 10 mul 297 exch sub
      exch sin 10 mul 410 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      297 410 10 4 105 89 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 321 moveto
      -145 0 atan dup cos 10 mul 192 exch sub
      exch sin 10 mul 176 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      192 176 10 4 0 -145 tgifarrowtip
   closepath fill
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-447.300 811.330 translate -1.013 -0.997 scale 90 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/near-plane.dvi)
@start /Fa 6 115 df<0FE03870703078387038203800F803B80E38383870387038F038
F078F0F879BB3E3C10117F9011>97 D<0FE018F03078703C603CE03CFFFCE000E000E000
E000F006F0047C1C7FF83FF00FC00F117F9011>101 D<04007C00FC001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C003C
00FF80091A7F990A>108 D<39F800FB3C003E1E003C0E00380E00380E00380E00380E00
380E00380E00380E00380E00380E00380E00380E00381E00FE3F8011117F9013>110
D<0C7C00FD1E007E0F001C07001C07801C07801C03801C03801C03801C03801C03801C03
801C07001C07001C06001F1C001DF8001C00001C00001C00001C00001C00001C00001E00
00FF80001119809013>112 D<0CF0FDF87F781E301C001C001C001C001C001C001C001C
001C001C001C001E00FF800D1180900C>114 D E end
TeXDict begin

1 0 bop 320 262 a Fa(near)8 b(plane)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-390.488 819.562 translate -1.013 -1.003 scale 90 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/far-plane.dvi)
@start /Fa 7 115 df<0FE03870703078387038203800F803B80E38383870387038F038
F078F0F879BB3E3C10117F9011>97 D<0FE018F03078703C603CE03CFFFCE000E000E000
E000F006F0047C1C7FF83FF00FC00F117F9011>101 D<03F806380C381C001C001C001C
001C00FFE01C001C001C001C001C001C001C001C001C001C001C001C001C001C003E00FF
C00D197F980C>I<04007C00FC001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C003C00FF80091A7F990A>108
D<39F800FB3C003E1E003C0E00380E00380E00380E00380E00380E00380E00380E00380E
00380E00380E00380E00381E00FE3F8011117F9013>110 D<0C7C00FD1E007E0F001C07
001C07801C07801C03801C03801C03801C03801C03801C03801C07001C07001C06001F1C
001DF8001C00001C00001C00001C00001C00001C00001E0000FF80001119809013>112
D<0CF0FDF87F781E301C001C001C001C001C001C001C001C001C001C001C001E00FF800D
1180900C>114 D E end
TeXDict begin

1 0 bop 320 262 a Fa(far)9 b(plane)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

15.188 -106.438 translate 0.984 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/xv.dvi)
@start /Fa 2 127 df<07878008C84010F0C020F1E020E3C040E18000E00000E00001C0
0001C00001C00001C000638080F38080F38100E5810084C60078780013127E9118>120
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(x)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-51.938 23.574 translate 1.000 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yv.dvi)
@start /Fa 2 127 df<1C00C02701C04701C04701C08703808703800E03800E03801C07
001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C000018006038
00F03000F06000E0C0004180003E0000121A7E9114>121 D<000200000300000300FFFF
80FFFF80000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-108.000 -96.312 translate 0.984 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/zv.dvi)
@start /Fa 2 127 df<038107C10FE6081C100800100020004000800100020004000804
10042C1877F843F081C010127E9113>122 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(z)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:21 1999
%%EndDocument
 @endspecial 18 2068 a(The)g(planes)f(that)h(bound)f(the)h(truncated)f
(viewing)g(pyramid)h(are)h(de\256ned)f(by)g(the)g(following:)75
2181 y(1.)23 b(the)10 b(top)h(plane,)g(de\256ned)g(by)599
2302 y Fr(normal)f(v)o(ector)o Fs(\000)j Fu(<)g Fr(0)p
Fu(;)8 b Fs(\000)g Fr(cos)1119 2251 y Fb(\020)1151 2271
y Fu(\013)p 1151 2291 30 2 v 1154 2333 a Fr(2)1186 2251
y Fb(\021)1220 2302 y Fu(;)g Fs(\000)g Fr(sin)1347 2251
y Fb(\020)1379 2271 y Fu(\013)p 1379 2291 V 1382 2333
a Fr(2)1413 2251 y Fb(\021)1453 2302 y Fu(>)765 2402
y Fr(p)q(oin)o(t)q Fs(\000)p Fr(\(0)p Fu(;)g Fr(0)p Fu(;)g
Fr(0\))982 2765 y Fv(8)p eop
%%Page: 9 9
9 8 bop 75 286 a Fv(2.)23 b(the)10 b(left)h(plane,)h(de\256ned)f(by)620
407 y Fr(normal)f(v)o(ector)o Fs(\000)j Fu(<)g Fr(cos)1055
357 y Fb(\020)1087 376 y Fu(\013)p 1087 397 30 2 v 1090
438 a Fr(2)1121 357 y Fb(\021)1156 407 y Fu(;)8 b Fr(0)p
Fu(;)g Fs(\000)g Fr(sin)1325 357 y Fb(\020)1357 376 y
Fu(\013)p 1357 397 V 1360 438 a Fr(2)1392 357 y Fb(\021)1431
407 y Fu(>)787 508 y Fr(p)q(oin)o(t)p Fs(\000)q Fr(\(0)p
Fu(;)g Fr(0)p Fu(;)g Fr(0\))75 647 y Fv(3.)23 b(the)10
b(bottom)h(plane,)g(de\256ned)g(by)620 768 y Fr(normal)f(v)o(ector)o
Fs(\000)j Fu(<)g Fr(0)p Fu(;)8 b Fr(cos)1098 717 y Fb(\020)1130
737 y Fu(\013)p 1130 757 V 1133 799 a Fr(2)1164 717 y
Fb(\021)1199 768 y Fu(;)g Fs(\000)g Fr(sin)1325 717 y
Fb(\020)1357 737 y Fu(\013)p 1357 757 V 1360 799 a Fr(2)1392
717 y Fb(\021)1431 768 y Fu(>)787 868 y Fr(p)q(oin)o(t)p
Fs(\000)q Fr(\(0)p Fu(;)g Fr(0)p Fu(;)g Fr(0\))75 1007
y Fv(4.)23 b(the)10 b(right)h(plane,)g(de\256ned)g(by)599
1128 y Fr(normal)f(v)o(ector)o Fs(\000)j Fu(<)g Fs(\000)8
b Fr(cos)1076 1078 y Fb(\020)1108 1097 y Fu(\013)p 1108
1118 V 1111 1159 a Fr(2)1143 1078 y Fb(\021)1177 1128
y Fu(;)g Fr(0)p Fu(;)g Fs(\000)g Fr(sin)1347 1078 y Fb(\020)1379
1097 y Fu(\013)p 1379 1118 V 1382 1159 a Fr(2)1413 1078
y Fb(\021)1453 1128 y Fu(>)765 1229 y Fr(p)q(oin)o(t)q
Fs(\000)p Fr(\(0)p Fu(;)g Fr(0)p Fu(;)g Fr(0\))75 1368
y Fv(5.)23 b(the)10 b(near)i(plane)f(de\256ned)g(by)764
1489 y Fr(normal)f(v)o(ector)p Fs(\000)j Fu(<)g Fr(0)p
Fu(;)8 b Fr(0)p Fu(;)g Fs(\000)p Fr(1)i Fu(>)931 1576
y Fr(p)q(oin)o(t)q Fs(\000)p Fr(\(0)p Fu(;)e Fr(0)p Fu(;)g
Fs(\000)p Fu(n)p Fr(\))75 1716 y Fv(6.)23 b(the)10 b(far)i(plane)f
(de\256ned)g(by)782 1836 y Fr(normal)f(v)o(ector)o Fs(\000)j
Fu(<)g Fr(0)p Fu(;)8 b Fr(0)p Fu(;)g Fr(1)j Fu(>)949
1924 y Fr(p)q(oin)o(t)p Fs(\000)q Fr(\(0)p Fu(;)d Fr(0)p
Fu(;)g Fs(\000)p Fu(f)d Fr(\))18 2063 y Fv(Given)i(a)g(polygon,)g(the)g
(polygon)f(is)h(clipped)f(against)h(each)h(plane)f(in)g(turn)g
(utilizing)e(the)i(result)g(of)g(one)h(clipping)d(operation)18
2138 y(as)11 b(the)g(input)f(to)h(the)f(next.)15 b(Clipping)10
b(is)g(terminated)h(if)g(all)g(points)f(are)i(clipped)e(out)g(at)h(any)
g(one)g(stage.)18 2309 y Fx(7)60 b(Clipping)14 b(against)h(the)f(Image)
h(Space)f(Cube)18 2431 y Fv(It)9 b(is)g(useful)g(to)g(see)h(how)f(the)g
(clipping)f(operation)g(simpli\256es)g(when)i(we)f(clip)g(against)f
(the)i(image)f(space)h(cube.)15 b(Consider)18 2506 y(the)c(\256gure)g
(below)m(,)g(where)g(we)h(represent)f(the)g(top)f(face)i(of)f(the)g
(image)h(space)f(cube.)982 2765 y(9)p eop
%%Page: 10 10
10 9 bop 622 982 a @beginspecial 76.284988 @llx 596.227478
@lly 254.952499 @urx 774.895020 @ury 1780 @rwi @setspecial
%%BeginDocument: figures/image-space-top-plane.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      300 350 moveto
      -300 0 atan dup cos 8 mul 300 exch sub
      exch sin 8 mul 50 exch sub lineto
   stroke
grestore
gsave
   newpath
      300 50 8 3 0 -300 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      450 200 moveto
      0 -300 atan dup cos 8 mul 150 exch sub
      exch sin 8 mul 200 exch sub lineto
   stroke
grestore
gsave
   newpath
      150 200 8 3 -300 0 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      200 100 moveto 400 100 lineto 400 300 lineto 200 300 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      160 100 moveto
      435 100 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 300 100 2 2 tgifellipse fill
gsave
   newpath 300 100 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      300 101 moveto
      98 0 atan dup cos 10 mul 300 exch sub
      exch sin 10 mul 199 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      300 199 10 4 0 98 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 224 135 2 2 tgifellipse fill
gsave
   newpath 224 135 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

5.400 82.562 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/P.dvi)
@start /Fa 1 81 df<FFFFF800FFFFFE000FC03F800FC00F800FC007C00FC007E00FC0
07E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F800FC03F000FFFFC000FC0
00000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0
00000FC00000FFFC0000FFFC00001B1C7E9B21>80 D E end
TeXDict begin

1 0 bop 320 262 a Fa(P)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

23.850 27.438 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/nv.dvi)
@start /Fa 2 127 df<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03
801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>110
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(n)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-22.163 33.699 translate 1.013 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q.dvi)
@start /Fa 1 82 df<003FE00001F07C0003C01E000F800F801F0007C01F0007C03E00
03E07E0003F07C0001F07C0001F0FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC00
01F8FC0001F8FC0001F87C0001F07C0001F07E0003F03E0003E03E0703E01F08C7C00F90
6F8003D07E0001F87C00003FF8080000380800003C1800003FF800001FF800001FF00000
0FF0000007E0000003C01D247D9B24>81 D E end
TeXDict begin

1 0 bop 320 262 a Fa(Q)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

84.536 12.812 translate 0.964 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/1.dvi)
@start /Fa 1 50 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D E end
TeXDict begin

1 0 bop 320 262 a Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-52.473 3.375 translate 1.004 1.013 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/minus-1.dvi)
@start /Fa 1 50 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D E /Fb 1 1 df<FFFFFF80FFFFFF8019027D8A20>0 D E end
TeXDict begin

1 0 bop 320 262 a Fb(\000)p Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

22.902 -52.875 translate 1.004 1.013 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/minus-1.dvi)
@start /Fa 1 50 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D E /Fb 1 1 df<FFFFFF80FFFFFF8019027D8A20>0 D E end
TeXDict begin

1 0 bop 320 262 a Fb(\000)p Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-68.625 26.312 translate 0.984 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/zv.dvi)
@start /Fa 2 127 df<038107C10FE6081C100800100020004000800100020004000804
10042C1877F843F081C010127E9113>122 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(z)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

25.688 91.074 translate 1.000 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yv.dvi)
@start /Fa 2 127 df<1C00C02701C04701C04701C08703808703800E03800E03801C07
001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C000018006038
00F03000F06000E0C0004180003E0000121A7E9114>121 D<000200000300000300FFFF
80FFFF80000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:59 1999
%%EndDocument
 @endspecial 88 1058 a Fv(The)15 b(top)e(plane)h(is)g(de\256ned)g(by)g
(the)g(point)f Ft(P)23 b Fr(=)h(\(0)p Fu(;)8 b Fr(1)p
Fu(;)g Fr(0\))j Fv(and)j(the)g(normal)g(vector)f Fu(~)-21
b(n)23 b Fr(=)p Fu(<)h Fr(0)p Fu(;)8 b Fs(\000)p Fr(1)p
Fu(;)g Fr(0)21 b Fu(>)p Fv(.)k(If)15 b(we)18 1133 y(consider)10
b(the)h(point)f Ft(Q)j Fr(=)g(\()p Fu(x;)8 b(y)r(;)g(z)r
Fr(\))p Fv(,)h(the)i(in/out)f(test)g(tells)g(us)h(that)g
Ft(Q)g Fv(is)g(in)g(if)812 1247 y Fu(<)i Ft(Q)d Fs(\000)h
Ft(P)h Fu(>)h Fs(\001)o Fu(~)-22 b(n)12 b(>)h Fr(0)18
1362 y Fv(That)e(is,)590 1477 y Fr(0)i Fu(<<)g Ft(Q)d
Fs(\000)h Ft(P)h Fu(>)h Fs(\001)o Fu(~)-22 b(n)626 1564
y Fr(=)p Fu(<)13 b Fr(\()p Fu(x;)8 b(y)r(;)g(z)r Fr(\))g
Fs(\000)i Fr(\(0)p Fu(;)e Fr(1)p Fu(;)g Fr(0\))i Fu(>)j
Fs(\001)f Fu(<)h Fr(0)p Fu(;)8 b Fs(\000)p Fr(1)p Fu(;)g
Fr(0)j Fu(>)626 1652 y Fr(=)p Fu(<)i Fr(\()p Fu(x;)8
b(y)j Fs(\000)f Fr(1)p Fu(;)e(z)r Fr(\))k Fu(>)h Fs(\001)f
Fu(<)h Fr(0)p Fu(;)8 b Fs(\000)p Fr(1)p Fu(;)g Fr(0)i
Fu(>)626 1739 y Fr(=)j(1)c Fs(\000)i Fu(y)18 1942 y Fv(or)g
(equivalently)e(that)i Ft(Q)g Fv(is)g(\252in\272)g(when)g
Fu(y)k(<)e Fr(1)e Fv(\261)g(which)f(in)h(retrospect,)g(is)g(obvious.)88
2017 y(But)g(the)f(dot)g(product)f(that)h(corresponds)f(to)h(the)g
(\252in\272)h(test)e(for)i(the)f(top)g(plane)g(is)g(just)f
Fu(y)h Fs(\000)f Fr(1)h Fv(for)g(any)h(point)e Fr(\()p
Fu(x;)f(y)r(;)g(z)r Fr(\))p Fv(.)18 2092 y(Similarly)m(,)j(the)g(dot)f
(product)g(for)i(the)f(other)g(planes)f(are)i(as)f(follows:)86
2199 y Fs(\017)23 b Fu(x)10 b Fs(\000)g Fr(1)h Fv(for)h(the)e(plane)h
(de\256ned)g(by)g(point)f Fr(\(1)p Fu(;)e Fr(0)p Fu(;)g
Fr(0\))g Fv(and)j(the)g(normal)g(vector)g Fu(<)i Fs(\000)p
Fr(1)p Fu(;)8 b Fr(0)p Fu(;)g Fr(0)j Fu(>)p Fv(,)86 2309
y Fs(\017)23 b Fu(z)12 b Fs(\000)e Fr(1)h Fv(for)h(the)f(plane)f
(de\256ned)i(by)e(point)g Fr(\(0)p Fu(;)e Fr(0)p Fu(;)g
Fr(1\))h Fv(and)i(the)f(normal)i(vector)f Fu(<)i Fr(0)p
Fu(;)8 b Fr(0)p Fu(;)g Fs(\000)p Fr(1)i Fu(>)p Fv(,)86
2420 y Fs(\017)23 b Fu(x)10 b Fr(+)g(1)h Fv(for)h(the)e(plane)h
(de\256ned)g(by)g(point)f Fr(\()p Fs(\000)p Fr(1)p Fu(;)e
Fr(0)p Fu(;)g Fr(0\))h Fv(and)i(the)g(normal)g(vector)g
Fu(<)i Fr(1)p Fu(;)8 b Fr(0)p Fu(;)g Fr(0)i Fu(>)p Fv(,)86
2530 y Fs(\017)23 b Fu(y)12 b Fr(+)e(1)h Fv(for)g(the)g(plane)g
(de\256ned)g(by)g(point)f Fr(\(0)p Fu(;)e Fs(\000)p Fr(1)p
Fu(;)g Fr(0\))h Fv(and)i(the)g(normal)g(vector)g Fu(<)i
Fr(0)p Fu(;)8 b Fr(1)p Fu(;)g Fr(0)i Fu(>)p Fv(,)86 2641
y Fs(\017)23 b Fu(z)12 b Fr(+)e(1)h Fv(for)h(the)f(plane)f(de\256ned)i
(by)e(point)g Fr(\(0)p Fu(;)e Fr(0)p Fu(;)g Fs(\000)p
Fr(1\))h Fv(and)i(the)g(normal)g(vector)g Fu(<)i Fr(0)p
Fu(;)8 b Fr(0)p Fu(;)g Fs(\000)p Fr(1)i Fu(>)p Fv(,)970
2765 y(10)p eop
%%Page: 11 11
11 10 bop 18 286 a Fv(and)10 b(so)g(the)f(\252inside/outside\272)f
(test)h(for)h(clipping)f(in)g(these)h(cases)g(contain)f(dot)h(products)
e(that)i(do)g(not)f(require)h(multiplies)18 362 y(\261)h(which)f(makes)
i(the)f(algorithm)f(very)h(ef)o(\256cient.)p 243 486
1500 3 v 18 657 a Fx(8)60 b(Clipping)14 b(in)h(Pr)o(ojective)d(Space)18
779 y Fv(If)g(we)g(are)g(careful,)g(we)g(can)g(also)f(clip)g(in)g
(projective)f(space.)p 693 796 306 2 v 12 w(Here)i(line)f(segments)g
(are)i(represented)e(in)g(the)g(same)i(form)18 854 y(as)e(in)g
(three-dimensional)e(coordinates)h(\261)h(that)g(is,)726
975 y Ft(Q)23 b Fr(=)g Ft(Q)885 982 y Fp(1)915 975 y
Fr(+)11 b Fu(t)i(<)g Ft(Q)1077 982 y Fp(2)1107 975 y
Fs(\000)e Ft(Q)1192 982 y Fp(1)1224 975 y Fu(>)18 1096
y Fv(represents)h(a)h(line)f(in)h(projective)e(space,)j(where)f
Ft(Q)861 1103 y Fp(1)899 1096 y Fr(=)18 b(\()p Fu(x)996
1103 y Fp(1)1015 1096 y Fu(;)8 b(y)1058 1103 y Fp(1)1078
1096 y Fu(;)g(z)1120 1103 y Fp(1)1139 1096 y Fu(;)g(w)1193
1103 y Fp(1)1211 1096 y Fr(\))13 b Fv(and)f Ft(Q)1359
1103 y Fp(2)1397 1096 y Fr(=)18 b(\()p Fu(x)1494 1103
y Fp(2)1514 1096 y Fu(;)8 b(y)1557 1103 y Fp(2)1576 1096
y Fu(;)g(z)1618 1103 y Fp(2)1637 1096 y Fu(;)g(w)1691
1103 y Fp(2)1709 1096 y Fr(\))13 b Fv(are)g(points)f(in)18
1171 y(four)o(-dimensional)6 b(projective)i(space.)14
b(T)m(o)8 b(\256nd)g(the)g(three-dimensional)e(line)i(that)f
(corresponds)g(to)h(this)f(four)o(-space)h(line,)18 1246
y(we)h(project)g(the)g(line)g(onto)f(the)h Fu(w)k Fr(=)g(1)c
Fv(plane,)h(dividing)d(by)i(the)g Fu(w)h Fv(coordinate.)k(This)8
b(is)h(illustrated)e(in)i(the)g(\256gure)g(below)m(,)18
1321 y(where)i(the)g(two)g Fu(w)h Fv(coordinates)e(are)i(assumed)f
(positive.)424 2001 y @beginspecial 34.127491 @llx 593.216248
@lly 308.151245 @urx 753.816223 @ury 2730 @rwi @setspecial
%%BeginDocument: figures/homogeneous-clipping-1.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      256 320 moveto
      310 169 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 320 moveto
      0 448 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 320 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 320 10 4 448 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 353 moveto
      -273 0 atan dup cos 10 mul 256 exch sub
      exch sin 10 mul 80 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      256 80 10 4 0 -273 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 259 moveto
      64 259 lineto
   stroke
grestore

% OVAL
newpath 277 258 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 277 258 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-23.288 85.938 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wv.dvi)
@start /Fa 2 127 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E03
80400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F
04000E13080003E1F0001A127E911E>119 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 325 262 a Fa(~)-26 b(w)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

129.777 -74.864 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/xyzspace.dvi)
@start /Fa 5 127 df<60F0F0701010101020204080040C7C830C>59
D<07878008C84010F0C020F1E020E3C040E18000E00000E00001C00001C00001C00001C0
00638080F38080F38100E5810084C60078780013127E9118>120
D<1C00C02701C04701C04701C08703808703800E03800E03801C07001C07001C07001C07
00180E00180E00180E001C1E000C3C0007DC00001C00001800603800F03000F06000E0C0
004180003E0000121A7E9114>I<038107C10FE6081C1008001000200040008001000200
0400080410042C1877F843F081C010127E9113>I<000200000300000300FFFF80FFFF80
000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(x)o(;)7 b(~)-21 b(y)r(;)6
b(~)-20 b(z)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

128.750 -13.625 translate 1.000 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequals1.dvi)
@start /Fa 2 62 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D<7FFFFFC0FFFFFFE000000000000000000000000000000000000000000000000000
00000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fb 1
120 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380400E038040
1C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04000E130800
03E1F0001A127E911E>119 D E end
TeXDict begin

1 0 bop 320 262 a Fb(w)12 b Fa(=)g(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 448 220 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 448 220 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 310 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 310 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      256 320 moveto
      449 221 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 375 258 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 375 258 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      310 169 moveto
      449 221 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      278 259 moveto
      376 259 lineto
   stroke
   1 setlinewidth
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

19.527 37.636 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

98.839 6.699 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:24 1999
%%EndDocument
 @endspecial 18 2077 a(In)h(this)f(case,)i(a)f(line)f(in)h(projective)e
(space)i(simply)f(projects)g(to)h(a)g(line)f(in)h(three-dimensional)e
(space.)18 b(However)11 b(if)h(one)18 2152 y(of)g(the)h
Fu(w)g Fv(coordinates,)f(say)g Fu(w)523 2159 y Fp(2)542
2152 y Fv(,)i(is)e(negative)f(then)h(the)g(line)g(projected)g(back)g
(into)g(three)g(dimensional)f(space)i(\252passes)18 2227
y(through)d(in\256nity\272)g(as)h(is)f(shown)h(in)f(the)h(next)g
(illustration.)971 2765 y(1)n(1)p eop
%%Page: 12 12
12 11 bop 422 1024 a @beginspecial 33.123749 @llx 565.111267
@lly 308.151245 @urx 753.816223 @ury 2740 @rwi @setspecial
%%BeginDocument: figures/homogeneous-clipping-2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      256 320 moveto
      310 169 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 320 moveto
      0 448 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 320 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 320 10 4 448 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 353 moveto
      -273 0 atan dup cos 10 mul 256 exch sub
      exch sin 10 mul 80 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      256 80 10 4 0 -273 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 259 moveto
      64 259 lineto
   stroke
grestore

% OVAL
newpath 277 258 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 277 258 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-23.288 85.938 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wv.dvi)
@start /Fa 2 127 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E03
80400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F
04000E13080003E1F0001A127E911E>119 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 325 262 a Fa(~)-26 b(w)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

129.777 -74.864 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/xyzspace.dvi)
@start /Fa 5 127 df<60F0F0701010101020204080040C7C830C>59
D<07878008C84010F0C020F1E020E3C040E18000E00000E00001C00001C00001C00001C0
00638080F38080F38100E5810084C60078780013127E9118>120
D<1C00C02701C04701C04701C08703808703800E03800E03801C07001C07001C07001C07
00180E00180E00180E001C1E000C3C0007DC00001C00001800603800F03000F06000E0C0
004180003E0000121A7E9114>I<038107C10FE6081C1008001000200040008001000200
0400080410042C1877F843F081C010127E9113>I<000200000300000300FFFF80FFFF80
000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(x)o(;)7 b(~)-21 b(y)r(;)6
b(~)-20 b(z)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

128.750 -13.625 translate 1.000 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequals1.dvi)
@start /Fa 2 62 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D<7FFFFFC0FFFFFFE000000000000000000000000000000000000000000000000000
00000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fb 1
120 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380400E038040
1C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04000E130800
03E1F0001A127E911E>119 D E end
TeXDict begin

1 0 bop 320 262 a Fb(w)12 b Fa(=)g(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 162 370 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 162 370 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% OVAL
newpath 310 168 2 2 tgifellipse fill
gsave
   2 setlinewidth
   newpath 310 168 2 2 tgifellipse stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      162 371 moveto
      370 258 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 368 258 2 2 tgifellipse fill
gsave
   [4 4] 0 setdash
   newpath 368 258 2 2 tgifellipse stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      310 169 moveto
      162 371 lineto
   stroke
   1 setlinewidth
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

19.527 37.636 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-74.411 -104.114 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      184 342 moveto
      453 258 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      255 320 moveto
      187 259 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      256 320 moveto
      233 259 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      256 320 moveto
      270 223 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      369 259 moveto
      479 259 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
gsave
   4 setlinewidth
   newpath
      63 259 moveto
      277 259 lineto
   stroke
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:24 1999
%%EndDocument
 @endspecial 18 1099 a Fv(The)13 b(viewing)e(transform)i(produces)f
(this)f(second)h(case)i(frequently)m(,)e(for)h(when)f(a)h(polygon)e(is)
i(behind)e(the)i(viewer)n(,)g(the)18 1174 y(viewing)f(transform)h
(produces)g(points)e(with)i(a)g(negative)g Fu(w)h Fv(coordinate.)21
b(So)14 b(these)e(lines)h(are)h(produced)f(whenever)g(a)18
1249 y(polygon)c(has)i(vertices)g(both)f(in)h(front)g(of,)g(and)g
(behind)f(the)h(viewer)n(.)p 243 1374 1500 3 v 88 1499
a(But)h(we)f(can)h(still)e(clip)h(in)g(projective)f(space.)17
b(Consider)11 b(the)g(following)e(illustration,)g(where)j(the)f(line)g
(lies)g(on)g(both)18 1574 y(sides)f(of)h(the)g Fu(w)j
Fr(=)f(0)e Fv(space.)424 2347 y @beginspecial 34.127491
@llx 571.133728 @lly 308.151245 @urx 753.816223 @ury
2730 @rwi @setspecial
%%BeginDocument: figures/homogeneous-clipping-4.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 320 moveto
      0 448 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 320 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 320 10 4 448 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 353 moveto
      -273 0 atan dup cos 10 mul 256 exch sub
      exch sin 10 mul 80 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      256 80 10 4 0 -273 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 259 moveto
      64 259 lineto
   stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-23.288 85.938 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wv.dvi)
@start /Fa 2 127 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E03
80400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F
04000E13080003E1F0001A127E911E>119 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 325 262 a Fa(~)-26 b(w)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

131.000 -13.625 translate 1.000 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequals1.dvi)
@start /Fa 2 62 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D<7FFFFFC0FFFFFFE000000000000000000000000000000000000000000000000000
00000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fb 1
120 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380400E038040
1C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04000E130800
03E1F0001A127E911E>119 D E end
TeXDict begin

1 0 bop 320 262 a Fb(w)12 b Fa(=)g(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

61.714 16.824 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

42.027 -98.489 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 336 371 2 2 tgifellipse fill
gsave
   newpath 336 371 2 2 tgifellipse stroke
grestore

% OVAL
newpath 404 195 2 2 tgifellipse fill
gsave
   newpath 404 195 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      336 371 moveto
      404 195 lineto
   stroke
grestore

% OVAL
newpath 356 320 2 2 tgifellipse fill
gsave
   newpath 356 320 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

49.312 -55.812 translate 1.031 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/I.dvi)
@start /Fa 1 74 df<FFFFFFFF07E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101C7F9B12>
73 D E end
TeXDict begin

1 0 bop 320 262 a Fa(I)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

140.438 -74.864 translate 1.000 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yv.dvi)
@start /Fa 2 127 df<1C00C02701C04701C04701C08703808703800E03800E03801C07
001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C000018006038
00F03000F06000E0C0004180003E0000121A7E9114>121 D<000200000300000300FFFF
80FFFF80000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:54 1999
%%EndDocument
 @endspecial 88 2422 a(W)l(e)k(can)f(\256nd)g(the)f(intersection)f(of)i
(this)f(line)g(with)g(the)g Fu(w)22 b Fr(=)g(0)14 b Fv(space)g(by)f
(calculating)g(the)g(intersection)f(point)h Ft(I)p Fv(,)18
2497 y(where)746 2572 y Ft(I)g Fr(=)g Ft(Q)866 2579 y
Fp(1)896 2572 y Fr(+)d Fu(t)j(<)g Ft(Q)1057 2579 y Fp(2)1087
2572 y Fs(\000)e Ft(Q)1172 2579 y Fp(1)1204 2572 y Fu(>)970
2765 y Fv(12)p eop
%%Page: 13 13
13 12 bop 18 286 a Fv(and)11 b(since)g Ft(I)g Fv(is)g(in)f(the)h
Fu(w)j Fr(=)f(0)e Fv(space,)g(we)h(must)e(have)i(that)e(the)h
Fu(w)h Fv(coordinate)e(of)i Ft(I)f Fv(is)g(zero,)g(that)g(is)791
398 y Fr(0)i(=)g Fu(w)908 405 y Fp(1)937 398 y Fr(+)e
Fu(t)p Fr(\()p Fu(w)1050 405 y Fp(2)1079 398 y Fs(\000)f
Fu(w)1157 405 y Fp(1)1177 398 y Fr(\))18 510 y Fv(and)h(this)f(implies)
g(that)869 622 y Fu(t)j Fr(=)1005 592 y Fu(w)1038 599
y Fp(1)p 951 612 161 2 v 951 654 a Fu(w)984 661 y Fp(1)1014
654 y Fs(\000)d Fu(w)1092 661 y Fp(2)1915 622 y Fv(\(1\))18
734 y(So,)i(we)f(can)g(calculate)g(the)g(intersection)f(of)h(a)g(line)g
(in)g(projective)f(space)h(with)f(the)h Fu(w)j Fr(=)f(0)e
Fv(space,)g(and)g(clip.)88 809 y(A)i(second)e(example)h(is)g(given)f
(by)h(the)g(following)e(\256gure.)18 b(Here)13 b(we)f(have)g(the)g
(space)g Fu(w)k Fr(=)g Fu(y)f Fv(and)d(a)g(line)f(crossing)18
885 y(this)f(space.)380 1778 y @beginspecial 13.048740
@llx 558.084961 @lly 308.151245 @urx 769.876221 @ury
2940 @rwi @setspecial
%%BeginDocument: figures/homogeneous-clipping-3.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      160 416 moveto
      448 129 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 320 moveto
      0 448 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 320 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 320 10 4 448 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 353 moveto
      -273 0 atan dup cos 10 mul 256 exch sub
      exch sin 10 mul 80 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      256 80 10 4 0 -273 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 259 moveto
      64 259 lineto
   stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-23.288 85.938 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wv.dvi)
@start /Fa 2 127 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E03
80400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F
04000E13080003E1F0001A127E911E>119 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 325 262 a Fa(~)-26 b(w)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

131.000 -13.625 translate 1.000 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequals1.dvi)
@start /Fa 2 62 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D<7FFFFFC0FFFFFFE000000000000000000000000000000000000000000000000000
00000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fb 1
120 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380400E038040
1C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04000E130800
03E1F0001A127E911E>119 D E end
TeXDict begin

1 0 bop 320 262 a Fb(w)12 b Fa(=)g(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      65 129 moveto
      352 417 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      419 97 moveto
      419.00 117.67 424.00 131.00
      9 15 atan dup cos 8 mul 434 exch sub
      exch sin 8 mul 137 exch sub curveto
   stroke
grestore
gsave
   newpath
      434 137 8 3 15 9 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      88 91 moveto
      88.00 110.33 83.00 123.00
      9 -15 atan dup cos 8 mul 73 exch sub
      exch sin 8 mul 129 exch sub curveto
   stroke
grestore
gsave
   newpath
      73 129 8 3 -15 9 tgifarrowtip
   closepath fill
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

25.152 50.011 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

103.902 5.011 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 437 214 2 2 tgifellipse fill
gsave
   newpath 437 214 2 2 tgifellipse stroke
grestore

% OVAL
newpath 335 138 2 2 tgifellipse fill
gsave
   newpath 335 138 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      437 214 moveto
      334 137 lineto
   stroke
grestore

% OVAL
newpath 395 182 2 2 tgifellipse fill
gsave
   newpath 395 182 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

65.625 40.375 translate 1.031 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/I.dvi)
@start /Fa 1 74 df<FFFFFFFF07E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101C7F9B12>
73 D E end
TeXDict begin

1 0 bop 320 262 a Fa(I)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

139.875 -74.301 translate 1.000 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yv.dvi)
@start /Fa 2 127 df<1C00C02701C04701C04701C08703808703800E03800E03801C07
001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C000018006038
00F03000F06000E0C0004180003E0000121A7E9114>121 D<000200000300000300FFFF
80FFFF80000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

97.031 97.068 translate 1.004 1.003 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequalsy.dvi)
@start /Fa 1 62 df<7FFFFFC0FFFFFFE0000000000000000000000000000000000000
0000000000000000000000000000FFFFFFE07FFFFFC01B0C7E8F20>61
D E /Fb 2 122 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380
400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04
000E13080003E1F0001A127E911E>119 D<1C00C02701C04701C04701C0870380870380
0E03800E03801C07001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00
001C00001800603800F03000F06000E0C0004180003E0000121A7E9114>121
D E /Fc 7 116 df<7FFFFF807FFFFF80701E0780601E0380401E0180C01E0180401E01
00001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E00
00001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E00
00003F000003FFE000191B809A19>84 D<0FF0001C7800383C00781C00781E00781E0020
1E00007E0001DE00071E001C1E00381E00781E00781E00F81E00F83E007C7EC07FDF803F
0F0012137F9212>97 D<03F80E3C1C1E381F780F700EF000F000F000F000F000F800F801
F8037C027F0E3FFC1FF807F010137F9212>99 D<07F0000FF800183C00301E00701F0060
1F00FFFF00E00000E00000E00000F00000F00000F00180F801007803007E0E003FFC001F
F8000FE00011137F9212>101 D<0400003C0000FC00007C00003C00003C00003C00003C
00003C00003C00003C7C003DFF003F0F003E0F803C07803C07803C07803C07803C07803C
07803C07803C07803C07803C07803C07803C07803C07807C0F80FF1FE0131D7F9C15>
104 D<0E3E007EFF807F8FC01F03E01E01E01E01F01E01F01E00F01E00F01E00F01E00F0
1E00F01E00F01E01E01E01E01E01C01F03801F87001EFC001E00001E00001E00001E0000
1E00001E00001E00003F0000FFE000141C809215>112 D<0FF838787038F038F018F818
FC007E003F801FE007F001F8C0FCC07CE03CE03CE038F870FFE00E137F9210>115
D E end
TeXDict begin

1 0 bop 257 262 a Fc(The)11 b(space)257 311 y Fb(w)i
Fa(=)f Fb(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-118.969 99.880 translate 1.004 1.003 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequals-y.dvi)
@start /Fa 1 1 df<FFFFFF80FFFFFF8019027D8A20>0 D E /Fb
1 62 df<7FFFFFC0FFFFFFE0000000000000000000000000000000000000000000000000
0000000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fc
2 122 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380400E0380
401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04000E1308
0003E1F0001A127E911E>119 D<1C00C02701C04701C04701C08703808703800E03800E
03801C07001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C0000
1800603800F03000F06000E0C0004180003E0000121A7E9114>121
D E /Fd 7 116 df<7FFFFF807FFFFF80701E0780601E0380401E0180C01E0180401E01
00001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E00
00001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E0000001E00
00003F000003FFE000191B809A19>84 D<0FF0001C7800383C00781C00781E00781E0020
1E00007E0001DE00071E001C1E00381E00781E00781E00F81E00F83E007C7EC07FDF803F
0F0012137F9212>97 D<03F80E3C1C1E381F780F700EF000F000F000F000F000F800F801
F8037C027F0E3FFC1FF807F010137F9212>99 D<07F0000FF800183C00301E00701F0060
1F00FFFF00E00000E00000E00000F00000F00000F00180F801007803007E0E003FFC001F
F8000FE00011137F9212>101 D<0400003C0000FC00007C00003C00003C00003C00003C
00003C00003C00003C7C003DFF003F0F003E0F803C07803C07803C07803C07803C07803C
07803C07803C07803C07803C07803C07803C07803C07807C0F80FF1FE0131D7F9C15>
104 D<0E3E007EFF807F8FC01F03E01E01E01E01F01E01F01E00F01E00F01E00F01E00F0
1E00F01E00F01E01E01E01E01E01C01F03801F87001EFC001E00001E00001E00001E0000
1E00001E00001E00003F0000FFE000141C809215>112 D<0FF838787038F038F018F818
FC007E003F801FE007F001F8C0FCC07CE03CE03CE038F870FFE00E137F9210>115
D E end
TeXDict begin

1 0 bop 257 262 a Fd(The)11 b(space)257 311 y Fc(w)i
Fb(=)f Fa(\000)p Fc(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:26 1999
%%EndDocument
 @endspecial 18 1853 a(Here)i(we)f(can)g(again)g(calculate)g(the)g
(intersection)e Ft(I)j Fv(of)f(the)g(line)f(with)h(the)f(space)i(by)746
1965 y Ft(I)h Fr(=)g Ft(Q)866 1972 y Fp(1)896 1965 y
Fr(+)d Fu(t)j(<)g Ft(Q)1057 1972 y Fp(2)1087 1965 y Fs(\000)e
Ft(Q)1172 1972 y Fp(1)1204 1965 y Fu(>)18 2077 y Fv(and)g(since)g
Ft(I)g Fv(is)g(in)f(the)h(space)g Fu(w)j Fr(=)f Fu(y)r
Fv(,)f(we)f(have)658 2189 y Fu(w)691 2196 y Fp(1)721
2189 y Fr(+)f Fu(t)p Fr(\()p Fu(w)833 2196 y Fp(2)863
2189 y Fs(\000)g Fu(w)941 2196 y Fp(1)960 2189 y Fr(\))j(=)g
Fu(y)1061 2196 y Fp(1)1091 2189 y Fr(+)d Fu(t)p Fr(\()p
Fu(y)1192 2196 y Fp(2)1222 2189 y Fs(\000)h Fu(y)1290
2196 y Fp(1)1310 2189 y Fr(\))18 2301 y Fv(which)f(can)i(be)f(solved)f
(for)h Fu(t)p Fv(,)i(giving)736 2413 y Fu(t)h Fr(=)957
2382 y Fu(w)990 2389 y Fp(1)1019 2382 y Fs(\000)c Fu(y)1086
2389 y Fp(1)p 818 2402 426 2 v 818 2444 a Fr(\()p Fu(w)869
2451 y Fp(1)899 2444 y Fs(\000)g Fu(y)966 2451 y Fp(1)986
2444 y Fr(\))g Fs(\000)g Fr(\()p Fu(w)1110 2451 y Fp(2)1139
2444 y Fs(\000)h Fu(y)1207 2451 y Fp(2)1227 2444 y Fr(\))1915
2413 y Fv(\(2\))18 2525 y(Since)g(we)h(can)f(calculate)g(the)g
(intersection,)f(we)h(can)h(clip)e(polygons)f(against)h(this)g(space.)p
243 2641 1500 3 v 970 2765 a(13)p eop
%%Page: 14 14
14 13 bop 18 286 a Fx(9)60 b(Clipping)14 b(in)h(the)g(V)n(iewing)e
(Operation)18 408 y Fv(In)d(the)h(viewing)e(operation,)h(the)g(camera)j
(transformation)p 550 416 411 2 v 9 w(transforms)d(points)f(from)i
(world)f(space)g(to)h(image)f(space.)16 b(T)m(o)18 483
y(implement)11 b(this)f(transformation)g(we)h(implemented)g(a)h
(viewing)e(transformation)p 925 501 426 2 v 10 w(that)g(produces)h
(points)e(in)i(projective)18 559 y(space)h(such)f(that,)h(when)f(we)h
(project)f(the)h(point)e(back)i(to)f(three-dimensional)f(space,)i(we)g
(obtain)f(points)f(in)h(the)h(image-)18 634 y(space)f(cube.)88
709 y(The)g(problem,)g(of)h(course,)f(is)f(this)g(projection.)k(The)d
(viewing)e(transform)i(can)h(produce)e(points)g(with)g(a)h(negative)f
Fu(w)18 784 y Fv(coordinate)e(\261)i(for)f(when)g(a)h(polygon)e(is)g
(behind)h(the)g(viewer)n(,)h(the)f(viewing)f(transform)h(produces)g
(points)f(with)g(a)i(negative)18 859 y Fu(w)i Fv(coordinate.)i(These)d
(points,)f(when)h(projected)f(produce)h(the)g(line)g(segments)f(that)h
(\252pass)g(through)e(in\256nity\272)h(in)h(three-)18
934 y(dimensional)f(space)i(\261)g(highly)f(undesirable)g(in)g
(computer)h(graphics)f(renderings.)17 b(So)12 b(the)g(problem)g(when)f
(clipping)g(in)18 1009 y(the)f(viewing)f(operation)h(is)g(that)g(the)g
(points)f(must)h(remain)h(in)f(projective)g(space,)h(but)f(we)g(must)g
(still)f(clip)h(on)g(the)h(image-)18 1084 y(space)g(cube)g(in)g
(three-dimensional)f(space.)88 1159 y(But)e(we)g(have)g(all)f(the)h
(machinery)f(now:)13 b(W)l(e)8 b(have)g(shown)e(how)i(to)f(clip)g(line)
g(segments)g(when)h(our)f(planes)g(and)h(points)18 1234
y(are)k(in)e(three-dimensional)g(space)h(and)g(have)g(shown)e(how)i(to)
f(clip)h(against)f(the)h(image-space)g(cube;)g(and)f(we)i(have)f(also)
18 1309 y(seen)h(that)g(we)h(can)f(\(at)h(least)f(in)f(a)i(few)g
(cases\))g(clip)e(in)h(projective)f(space.)20 b(So)12
b(how)g(do)g(we)g(combine)h(these)f(operations)18 1384
y(and)h(clip)g(line)g(segments)g(against)g(the)g(image-space)h(cube)g
(when)f(our)g(points)f(are)j(in)e(projective)f(space?)23
b(It')n(s)13 b(not)g(too)18 1460 y(dif)o(\256cult.)p
243 1584 1500 3 v 88 1709 a(Let')n(s)e(reexamine)g(the)g(case)g(where)g
(we)g(clipped)f(on)h(the)g(top)f(plane)h(of)g(the)f(image)i(space)f
(cube,)g(but)f(lets)h(consider)f(a)18 1784 y(point)g(that)g(has)h(been)
g(projected)g(back)g(from)h(projective)e(space.)620 2540
y @beginspecial 75.281250 @llx 596.227478 @lly 254.952499
@urx 774.895020 @ury 1790 @rwi @setspecial
%%BeginDocument: figures/image-space-top-plane-2.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   newpath
      300 350 moveto
      -300 0 atan dup cos 8 mul 300 exch sub
      exch sin 8 mul 50 exch sub lineto
   stroke
grestore
gsave
   newpath
      300 50 8 3 0 -300 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      450 200 moveto
      0 -300 atan dup cos 8 mul 150 exch sub
      exch sin 8 mul 200 exch sub lineto
   stroke
grestore
gsave
   newpath
      150 200 8 3 -300 0 tgifarrowtip
   closepath fill
grestore

% BOX
gsave
   1.415 setmiterlimit
   newpath
      200 100 moveto 400 100 lineto 400 300 lineto 200 300 lineto
   closepath stroke
   1 setmiterlimit
grestore

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      160 100 moveto
      435 100 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 300 100 2 2 tgifellipse fill
gsave
   newpath 300 100 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      300 101 moveto
      98 0 atan dup cos 10 mul 300 exch sub
      exch sin 10 mul 199 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      300 199 10 4 0 98 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 224 135 2 2 tgifellipse fill
gsave
   newpath 224 135 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

23.850 27.438 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/nv.dvi)
@start /Fa 2 127 df<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03
801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>110
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(n)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

84.536 12.812 translate 0.964 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/1.dvi)
@start /Fa 1 50 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D E end
TeXDict begin

1 0 bop 320 262 a Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-52.473 3.375 translate 1.004 1.013 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/minus-1.dvi)
@start /Fa 1 50 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D E /Fb 1 1 df<FFFFFF80FFFFFF8019027D8A20>0 D E end
TeXDict begin

1 0 bop 320 262 a Fb(\000)p Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

22.902 -52.875 translate 1.004 1.013 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/minus-1.dvi)
@start /Fa 1 50 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D E /Fb 1 1 df<FFFFFF80FFFFFF8019027D8A20>0 D E end
TeXDict begin

1 0 bop 320 262 a Fb(\000)p Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-68.625 26.312 translate 0.984 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/zv.dvi)
@start /Fa 2 127 df<038107C10FE6081C100800100020004000800100020004000804
10042C1877F843F081C010127E9113>122 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(z)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

25.688 91.074 translate 1.000 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yv.dvi)
@start /Fa 2 127 df<1C00C02701C04701C04701C08703808703800E03800E03801C07
001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C000018006038
00F03000F06000E0C0004180003E0000121A7E9114>121 D<000200000300000300FFFF
80FFFF80000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

38.369 95.344 translate 1.006 0.984 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/010.dvi)
@start /Fa 1 60 df<60F0F0701010101020204080040C7C830C>59
D E /Fb 4 50 df<004000800100020006000C000C001800180030003000700060006000
6000E000E000E000E000E000E000E000E000E000E000E000E00060006000600070003000
3000180018000C000C00060002000100008000400A2A7D9E10>40
D<800040002000100018000C000C000600060003000300038001800180018001C001C001
C001C001C001C001C001C001C001C001C001C0018001800180038003000300060006000C
000C00180010002000400080000A2A7E9E10>I<03C00C301818300C300C700E60066006
E007E007E007E007E007E007E007E007E007E007E007E007E00760066006700E300C300C
18180C3007E0101D7E9B15>48 D<030007003F00C7000700070007000700070007000700
0700070007000700070007000700070007000700070007000700070007000F80FFF80D1C
7C9B15>I E end
TeXDict begin

1 0 bop 257 262 a Fb(\(0)p Fa(;)7 b Fb(1)p Fa(;)g Fb(0\))p
eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-55.727 102.764 translate 0.994 0.995 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/xwywzw.dvi)
@start /Fa 1 60 df<60F0F0701010101020204080040C7C830C>59
D E /Fb 4 123 df<3818204C18604C18208C3020983020183020183020306040306040
30608030608018B1000F1E00130D7F8C18>119 D<0E3C13CE238E430C43000300030006
000608C608E610CA2071C00F0D7F8C13>I<38184C184C188C3098301830183030603060
306030E011C00EC000C00080E180E30046003C000D137F8C11>I<07100F2010E0004000
80010002000C00102020203840478083000C0D7F8C10>I E /Fc
2 42 df<004000800100020006000C000C0018001800300030007000600060006000E000
E000E000E000E000E000E000E000E000E000E000E0006000600060007000300030001800
18000C000C00060002000100008000400A2A7D9E10>40 D<800040002000100018000C00
0C000600060003000300038001800180018001C001C001C001C001C001C001C001C001C0
01C001C001C0018001800180038003000300060006000C000C0018001000200040008000
0A2A7E9E10>I E end
TeXDict begin

1 0 bop 257 262 a Fc(\()281 245 y Fb(x)p 278 252 25 2
v 278 276 a(w)308 262 y Fa(;)335 243 y Fb(y)p 332 252
V 332 276 a(w)361 262 y Fa(;)389 245 y Fb(z)p 385 252
V 385 276 a(w)415 262 y Fc(\))p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% POLY/OPEN-SPLINE
gsave
   newpath
      207 76 moveto
      215.67 86.67 220.67 102.33
      31 2 atan dup cos 8 mul 222 exch sub
      exch sin 8 mul 123 exch sub curveto
   stroke
grestore
gsave
   newpath
      222 123 8 3 2 31 tgifarrowtip
   closepath fill
grestore

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:05:01 1999
%%EndDocument
 @endspecial 970 2765 a(14)p eop
%%Page: 15 15
15 14 bop 18 286 a Fv(Here,)12 b(our)f(three-dimensional)e
(\252inside/outside\272)g(test)h(tells)g(us)h(that)g(the)g(points)e
Fr(\()1353 269 y Fq(x)p 1350 276 27 2 v 1350 302 a(w)1381
286 y Fu(;)1410 266 y Fq(y)p 1406 276 V 1406 302 a(w)1437
286 y Fu(;)1467 269 y Fq(z)p 1463 276 V 1463 302 a(w)1494
286 y Fr(\))i Fv(is)f(\252in\272)i(if)674 397 y Fr(0)g
Fu(<)g(~)-22 b(n)p Fs(\001)13 b Fu(<)g Fr(\()884 366
y Fu(x)p 881 386 34 2 v 881 428 a(w)919 397 y(;)949 366
y(y)p 944 386 V 944 428 a(w)983 397 y(;)1013 366 y(z)p
1008 386 V 1008 428 a(w)1047 397 y Fr(\))d Fs(\000)g
Fr(\(0)p Fu(;)e Fr(1)p Fu(;)g Fr(0\))i Fu(>)18 507 y
Fv(or)639 617 y Fr(0)j Fu(<<)g Fr(0)p Fu(;)8 b Fs(\000)p
Fr(1)p Fu(;)g Fr(0)j Fu(>)i Fs(\001)f Fu(<)1045 587 y(x)p
1041 607 V 1041 648 a(w)1080 617 y(;)1110 587 y(y)p 1105
607 V 1105 648 a(w)1154 617 y Fs(\000)e Fr(1)p Fu(;)1252
587 y(z)p 1247 607 V 1247 648 a(w)1298 617 y(>)675 718
y Fr(=)j(1)d Fs(\000)811 687 y Fu(y)p 806 707 V 806 749
a(w)18 828 y Fv(which)g(states,)h(in)g(the)g(case)g(that)g
Fu(w)h Fv(is)f(positive,)e(that)i(the)g(point)f(is)g(\252in\272)h(only)
g(if)805 938 y Fu(w)j(>)f(y)g Fv(or)e Fu(w)g Fs(\000)f
Fu(y)15 b(>)e Fr(0)18 1048 y Fv(Now)e(consider)f(a)i(line)e(that)h
(crosses)f(the)h(plane)g Fu(y)k Fr(=)e(1)e Fv(and)g(assume)g(that)f
(this)g(line)h(has)g(the)g(two)f(endpoints)531 1164 y
Ft(Q)570 1171 y Fp(1)603 1164 y Fr(=)651 1099 y Fb(\022)693
1133 y Fu(x)719 1140 y Fp(1)p 689 1153 53 2 v 689 1195
a Fu(w)722 1202 y Fp(1)747 1164 y Fu(;)777 1133 y(y)799
1140 y Fp(1)p 772 1153 V 772 1195 a Fu(w)805 1202 y Fp(1)829
1164 y Fu(;)860 1133 y(z)881 1140 y Fp(1)p 854 1153 V
854 1195 a Fu(w)887 1202 y Fp(1)911 1099 y Fb(\023)964
1164 y Fv(and)h Ft(Q)1080 1171 y Fp(2)1112 1164 y Fr(=)1160
1099 y Fb(\022)1202 1133 y Fu(x)1228 1140 y Fp(2)p 1199
1153 V 1199 1195 a Fu(w)1232 1202 y Fp(2)1256 1164 y
Fu(;)1286 1133 y(y)1308 1140 y Fp(2)p 1281 1153 V 1281
1195 a Fu(w)1314 1202 y Fp(2)1339 1164 y Fu(;)1369 1133
y(z)1390 1140 y Fp(2)p 1364 1153 V 1364 1195 a Fu(w)1397
1202 y Fp(2)1421 1099 y Fb(\023)18 1274 y Fv(both)f(of)h(which)g(have)g
(been)g(projected)g(back)g(from)h(projective)e(space.)597
1913 y @beginspecial 56.209991 @llx 624.332520 @lly 246.922485
@urx 774.895020 @ury 1900 @rwi @setspecial
%%BeginDocument: figures/image-space-top-plane-3.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      161 199 moveto
      436 199 lineto
   stroke
   [] 0 setdash
grestore

% OVAL
newpath 301 199 2 2 tgifellipse fill
gsave
   newpath 301 199 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      301 200 moveto
      98 0 atan dup cos 10 mul 301 exch sub
      exch sin 10 mul 298 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      301 298 10 4 0 98 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 225 234 2 2 tgifellipse fill
gsave
   newpath 225 234 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

24.412 -28.250 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/nv.dvi)
@start /Fa 2 127 df<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C03
801C03801C03801C0700380710380710380E10380E2070064030038014127E9119>110
D<000200000300000300FFFF80FFFF80000700000C000008001108789D15>126
D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(n)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 367 69 2 2 tgifellipse fill
gsave
   newpath 367 69 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      225 235 moveto
      367 70 lineto
   stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

25.650 29.688 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/P.dvi)
@start /Fa 1 81 df<FFFFF800FFFFFE000FC03F800FC00F800FC007C00FC007E00FC0
07E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F800FC03F000FFFFC000FC0
00000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC000000FC0
00000FC00000FFFC0000FFFC00001B1C7E9B21>80 D E end
TeXDict begin

1 0 bop 320 262 a Fa(P)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-38.973 -24.801 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

60.027 91.074 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 256 199 2 2 tgifellipse fill
gsave
   newpath 256 199 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-16.500 26.875 translate 1.031 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/I.dvi)
@start /Fa 1 74 df<FFFFFFFF07E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101C7F9B12>
73 D E end
TeXDict begin

1 0 bop 320 262 a Fa(I)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-73.428 7.824 translate 0.995 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yequal1.dvi)
@start /Fa 2 62 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D<7FFFFFC0FFFFFFE000000000000000000000000000000000000000000000000000
00000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fb 1
122 df<1C00C02701C04701C04701C08703808703800E03800E03801C07001C07001C07
001C0700180E00180E00180E001C1E000C3C0007DC00001C00001800603800F03000F060
00E0C0004180003E0000121A7E9114>121 D E end
TeXDict begin

1 0 bop 257 262 a Fb(y)14 b Fa(=)e(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:05:02 1999
%%EndDocument
 @endspecial 18 1988 a(Any)h(point)830 2063 y Ft(Q)i
Fr(=)930 2012 y Fb(\020)966 2032 y Fu(x)p 962 2052 34
2 v 962 2094 a(w)1001 2063 y(;)1031 2032 y(y)p 1026 2052
V 1026 2094 a(w)1065 2063 y(;)1095 2032 y(z)p 1090 2052
V 1090 2094 a(w)1129 2012 y Fb(\021)18 2160 y Fv(that)d(projects)g(to)g
(the)g(plane)h(at)f(the)h(top)f(of)g(the)h(image-space)g(cube)f(has)h
(the)f(property)g(that)g Fu(y)15 b Fr(=)e Fu(w)q Fv(,)e(and)f(so)h
(clipping)d(the)18 2235 y(line)i(segment)h(is)g(equivalent)f(to)g
(clipping)g(the)h(projective-space)f(line)g(segment)h(de\256ned)h(by)e
(the)h(two)g(points)543 2345 y Ft(Q)582 2326 y Fq(P)582
2356 y Fp(1)624 2345 y Fr(=)i(\()p Fu(x)716 2352 y Fp(1)735
2345 y Fu(;)8 b(y)778 2352 y Fp(1)798 2345 y Fu(;)g(z)840
2352 y Fp(1)859 2345 y Fu(;)g(w)913 2352 y Fp(1)931 2345
y Fr(\))j Fv(and)g Ft(Q)1076 2326 y Fq(P)1076 2356 y
Fp(2)1118 2345 y Fr(=)i(\()p Fu(x)1210 2352 y Fp(2)1230
2345 y Fu(;)8 b(y)1273 2352 y Fp(2)1292 2345 y Fu(;)g(z)1334
2352 y Fp(2)1353 2345 y Fu(;)g(w)1407 2352 y Fp(2)1425
2345 y Fr(\))18 2455 y Fv(against)i(the)h(space)g Fu(w)j
Fr(=)f Fu(y)g Fv(in)e(projective)f(space.)88 2530 y(But)i(we)f(have)g
(done)g(this)f(in)h(the)f(sections)g(above!)15 b(W)l(e)d(can)f
(calculate)g(the)g(intersection)f Ft(I)1543 2514 y Fq(P)1583
2530 y Fv(by)754 2641 y Ft(I)774 2622 y Fq(P)815 2641
y Fr(=)j Ft(Q)902 2622 y Fq(P)902 2652 y Fp(1)942 2641
y Fr(+)e Fu(t)p Fr(\()p Ft(Q)1061 2622 y Fq(P)1061 2652
y Fp(2)1100 2641 y Fs(\000)g Ft(Q)1185 2622 y Fq(P)1185
2652 y Fp(1)1214 2641 y Fr(\))970 2765 y Fv(15)p eop
%%Page: 16 16
16 15 bop 18 286 a Fv(where)11 b Fu(t)h Fv(is)f(the)g(value)736
362 y Fu(t)j Fr(=)957 331 y Fu(w)990 338 y Fp(1)1019
331 y Fs(\000)c Fu(y)1086 338 y Fp(1)p 818 351 426 2
v 818 393 a Fr(\()p Fu(w)869 400 y Fp(1)899 393 y Fs(\000)g
Fu(y)966 400 y Fp(1)986 393 y Fr(\))g Fs(\000)g Fr(\()p
Fu(w)1110 400 y Fp(2)1139 393 y Fs(\000)h Fu(y)1207 400
y Fp(2)1227 393 y Fr(\))18 467 y Fv(and)g(then)g(the)f(point)g
Ft(I)376 450 y Fq(P)417 467 y Fv(projected)g(back)h(to)g(image)h(space)
f(is)g(the)g(intersection)e(of)i(the)g(line)p 1504 430
118 2 v 11 w Ft(Q)1543 474 y Fp(1)1563 467 y Ft(Q)1602
474 y Fp(2)1622 467 y Fv(.)424 1289 y @beginspecial 34.127491
@llx 559.088745 @lly 308.151245 @urx 753.816223 @ury
2730 @rwi @setspecial
%%BeginDocument: figures/homogeneous-clipping-5.eps
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

end


tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLY/OPEN-SPLINE
gsave
   [4 4] 0 setdash
   newpath
      160 416 moveto
      448 129 lineto
   stroke
   [] 0 setdash
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      64 320 moveto
      0 448 atan dup cos 10 mul 512 exch sub
      exch sin 10 mul 320 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      512 320 10 4 448 0 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      256 353 moveto
      -273 0 atan dup cos 10 mul 256 exch sub
      exch sin 10 mul 80 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      256 80 10 4 0 -273 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      480 259 moveto
      64 259 lineto
   stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

-23.288 85.938 translate 1.013 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wv.dvi)
@start /Fa 2 127 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E03
80400E0380401C0700801C0700801C0700801C07010018060100180602001C0E02001C0F
04000E13080003E1F0001A127E911E>119 D<000200000300000300FFFF80FFFF800007
00000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 325 262 a Fa(~)-26 b(w)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

131.000 -13.625 translate 1.000 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/wequals1.dvi)
@start /Fa 2 62 df<030007003F00C700070007000700070007000700070007000700
07000700070007000700070007000700070007000700070007000F80FFF80D1C7C9B15>
49 D<7FFFFFC0FFFFFFE000000000000000000000000000000000000000000000000000
00000000000000FFFFFFE07FFFFFC01B0C7E8F20>61 D E /Fb 1
120 df<1C00C0802701C1C04701C1C04701C0C087038040870380400E0380400E038040
1C0700801C0700801C0700801C07010018060100180602001C0E02001C0F04000E130800
03E1F0001A127E911E>119 D E end
TeXDict begin

1 0 bop 320 262 a Fb(w)12 b Fa(=)g(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 391 236 2 2 tgifellipse fill
gsave
   newpath 391 236 2 2 tgifellipse stroke
grestore

% OVAL
newpath 400 116 2 2 tgifellipse fill
gsave
   newpath 400 116 2 2 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      391 236 moveto
      400 117 lineto
   stroke
   1 setlinewidth
grestore

% OVAL
newpath 395 182 2 2 tgifellipse fill
gsave
   newpath 395 182 2 2 tgifellipse stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

139.875 -74.301 translate 1.000 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/yv.dvi)
@start /Fa 2 127 df<1C00C02701C04701C04701C08703808703800E03800E03801C07
001C07001C07001C0700180E00180E00180E001C1E000C3C0007DC00001C000018006038
00F03000F06000E0C0004180003E0000121A7E9114>121 D<000200000300000300FFFF
80FFFF80000700000C000008001108789D15>126 D E end
TeXDict begin

1 0 bop 319 262 a Fa(~)-20 b(y)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% POLY/OPEN-SPLINE
gsave
   newpath
      400 117 moveto
      256 320 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      391 236 moveto
      256 320 lineto
   stroke
grestore

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

73.290 82.082 translate 0.993 0.995 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1supP.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 81 df<07FFE000E07001C018
01C01C01C01C01C01C0380380380380380700381C007FF000700000700000700000E0000
0E00000E00000E00001C0000FF800016147F9315>80 D E /Fc 1
82 df<003FE00001F07C0003C01E000F800F801F0007C01F0007C03E0003E07E0003F07C
0001F07C0001F0FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC
0001F87C0001F07C0001F07E0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001
F87C00003FF8080000380800003C1800003FF800001FF800001FF000000FF0000007E000
0003C01D247D9B24>81 D E end
TeXDict begin

1 0 bop 257 262 a Fc(Q)293 243 y Fb(P)293 272 y Fa(1)p
eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

94.103 4.457 translate 0.993 0.995 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2supP.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 81 df<07FFE000E07001C018
01C01C01C01C01C01C0380380380380380700381C007FF000700000700000700000E0000
0E00000E00000E00001C0000FF800016147F9315>80 D E /Fc 1
82 df<003FE00001F07C0003C01E000F800F801F0007C01F0007C03E0003E07E0003F07C
0001F07C0001F0FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC
0001F87C0001F07C0001F07E0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001
F87C00003FF8080000380800003C1800003FF800001FF800001FF000000FF0000007E000
0003C01D247D9B24>81 D E end
TeXDict begin

1 0 bop 257 262 a Fc(Q)293 243 y Fb(P)293 272 y Fa(2)p
eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

3.777 -20.301 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q1.dvi)
@start /Fa 1 50 df<0C001C00EC000C000C000C000C000C000C000C000C000C000C00
0C000C000C000C000C00FFC00A137D9211>49 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(1)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

51.589 -37.176 translate 1.004 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/Q2.dvi)
@start /Fa 1 51 df<1F0060C06060F070F030603000700070006000C001C001800200
04000810101020207FE0FFE00C137E9211>50 D E /Fb 1 82 df<003FE00001F07C0003
C01E000F800F801F0007C01F0007C03E0003E07E0003F07C0001F07C0001F0FC0001F8FC
0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F8FC0001F87C0001F07C0001F07E
0003F03E0003E03E0703E01F08C7C00F906F8003D07E0001F87C00003FF8080000380800
003C1800003FF800001FF800001FF000000FF0000007E0000003C01D247D9B24>81
D E end
TeXDict begin

1 0 bop 320 262 a Fb(Q)355 272 y Fa(2)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

95.203 8.028 translate 0.984 1.023 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/IsupP.dvi)
@start /Fa 1 81 df<07FFE000E07001C01801C01C01C01C01C01C0380380380380380
700381C007FF000700000700000700000E00000E00000E00000E00001C0000FF80001614
7F9315>80 D E /Fb 1 74 df<FFFFFFFF07E007E007E007E007E007E007E007E007E007
E007E007E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101C7F
9B12>73 D E end
TeXDict begin

1 0 bop 257 262 a Fb(I)275 243 y Fa(P)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

% OVAL
newpath 355 259 2 2 tgifellipse fill
gsave
   newpath 355 259 2 2 tgifellipse stroke
grestore

% OVAL
newpath 299 259 2 2 tgifellipse fill
gsave
   newpath 299 259 2 2 tgifellipse stroke
grestore

% OVAL
newpath 318 259 2 2 tgifellipse fill
gsave
   newpath 318 259 2 2 tgifellipse stroke
grestore

% BOX
newpath
   317 238 moveto 330 238 lineto 330 255 lineto 317 255 lineto
closepath 1 setgray fill
0 setgray

% EPS
end
/tgiflevel0 save def
/tgifdictcount0 countdictstack def
/tgifopcount0 count 1 sub def
userdict begin
/showpage {} def
/letter {} def
/legal {} def
1 72 128 div 100 mul 100 div div dup neg scale
72 0 mul neg 72 11 mul neg translate

26.250 -6.875 translate 1.031 1.000 scale 0 rotate

/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
TeXDict begin 40258437 52099154 1000 300 300
(/6/home/joy/teaching/projects/GraphicsNotes/Clipping/figures/annotation/I.dvi)
@start /Fa 1 74 df<FFFFFFFF07E007E007E007E007E007E007E007E007E007E007E0
07E007E007E007E007E007E007E007E007E007E007E007E007E0FFFFFFFF101C7F9B12>
73 D E end
TeXDict begin

1 0 bop 320 262 a Fa(I)p eop
end
userdict /end-hook known{end-hook}if
count tgifopcount0 sub {pop} repeat
countdictstack tgifdictcount0 sub {end} repeat
tgiflevel0 restore
tgifdict begin

grestore
tgifsavedpage restore
end
%MatchingCreationDate: Sat Feb 27 15:04:57 1999
%%EndDocument
 @endspecial 88 1364 a(One)h(should)f(notice)g(that)g(the)h
Fu(t)h Fv(used)e(to)h(calculate)g(the)f(intersection)g(in)g
(homogeneous)g(space)h(is)f(not)h(the)f(same)i(as)18
1439 y(if)g(the)f Fu(t)h Fv(were)g(calculated)f(in)h(three-dimensional)
e(space.)20 b(In)12 b(the)h(above)f(\256gure,)i(we)e(can)h(see)g(that)f
(the)h Fu(t)g Fv(in)f(projective)18 1514 y(space)f(is)g(close)g(to)f
(one-half,)i(but)e(the)h(intersection)e(in)i(three-dimensional)f(space)
h(is)g(not)f(close)h(to)g(the)g(midpoint.)p 243 1622
1500 3 v 88 1730 a(Now)g(we)h(can)f(do)g(the)g(whole)f(job.)15
b(W)l(e)c(can)h(utilize)e(the)h(clipping)e(method)i(for)g(simple)g
(planes)f(in)h(projective)f(space)18 1805 y(to)h(clip)f(against)g(the)h
(image)h(space)f(cube.)75 1903 y(1.)23 b(In)14 b(order)h(to)g(\256rst)f
(remove)i(the)e(points)f(with)h(a)h(negative)f Fu(w)i
Fv(coordinate)e(we)h(clip)f(our)h(projective)e(coordinates)132
1978 y(against)d(the)h Fu(w)k Fr(=)f(0)d Fv(space.)16
b(If)c(we)g(have)g(a)f(point)g Fr(\()p Fu(x;)d(y)r(;)g(z)r(;)g(w)p
Fr(\))p Fv(,)h(we)j(use)f(the)h(distance)e(measure)i
Fu(w)q Fv(,)g(and)f(if)h(given)132 2053 y(two)e(points)g
Fr(\()p Fu(x)378 2060 y Fp(1)397 2053 y Fu(;)e(y)440
2060 y Fp(1)459 2053 y Fu(;)g(z)501 2060 y Fp(1)520 2053
y Fu(;)g(w)574 2060 y Fp(1)593 2053 y Fr(\))j Fv(and)g
Fr(\()p Fu(x)743 2060 y Fp(2)762 2053 y Fu(;)d(y)805
2060 y Fp(2)824 2053 y Fu(;)g(z)866 2060 y Fp(2)885 2053
y Fu(;)g(w)939 2060 y Fp(2)958 2053 y Fr(\))p Fv(,)j(we)h(use)f(the)f
(ratio)1024 2126 y Fu(w)1057 2133 y Fp(1)p 970 2147 161
2 v 970 2188 a Fu(w)1003 2195 y Fp(1)1032 2188 y Fs(\000)h
Fu(w)1111 2195 y Fp(2)132 2261 y Fv(to)f(calculate)h(the)g
(intersection)f(with)g(the)h(space.)75 2367 y(2.)23 b(T)m(o)11
b(remove)h(those)e(points)g(beyond)h(the)g(top)g(plane)g(of)g(the)h
(image-space)f(cube,)h(we)g(clip)f(our)g(projective)g(coordi-)132
2442 y(nates)e(against)g(the)h Fu(w)j Fr(=)g Fu(y)f Fv(space.)j(If)c
(we)f(have)g(a)g(point)f Fr(\()p Fu(x;)f(y)r(;)g(z)r(;)g(w)q
Fr(\))p Fv(,)f(we)j(use)g(the)g(distance)f(measure)i
Fu(y)d Fs(\000)f Fu(w)q Fv(,)k(and)132 2517 y(if)g(given)f(two)h
(points)e Fr(\()p Fu(x)529 2524 y Fp(1)548 2517 y Fu(;)f(y)591
2524 y Fp(1)611 2517 y Fu(;)g(z)653 2524 y Fp(1)672 2517
y Fu(;)g(w)726 2524 y Fp(1)744 2517 y Fr(\))j Fv(and)g
Fr(\()p Fu(x)894 2524 y Fp(2)914 2517 y Fu(;)d(y)957
2524 y Fp(2)976 2517 y Fu(;)g(z)1018 2524 y Fp(2)1037
2517 y Fu(;)g(w)1091 2524 y Fp(2)1109 2517 y Fr(\))p
Fv(,)k(we)f(use)g(the)g(ratio)975 2590 y Fu(w)1008 2597
y Fp(1)1037 2590 y Fs(\000)g Fu(y)1105 2597 y Fp(1)p
837 2611 426 2 v 837 2652 a Fr(\()p Fu(w)888 2659 y Fp(1)917
2652 y Fs(\000)f Fu(y)984 2659 y Fp(1)1004 2652 y Fr(\))g
Fs(\000)h Fr(\()p Fu(w)1129 2659 y Fp(2)1158 2652 y Fs(\000)f
Fu(y)1225 2659 y Fp(2)1245 2652 y Fr(\))970 2765 y Fv(16)p
eop
%%Page: 17 17
17 16 bop 132 286 a Fv(to)10 b(calculate)h(the)g(intersection)f(with)g
(the)h(space.)75 395 y(3.)23 b(T)m(o)8 b(remove)i(those)f(points)e
(beyond)i(the)g(bottom)f(plane)h(of)g(the)h(image-space)f(cube,)h(we)g
(clip)f(our)g(projective)f(coor)o(-)132 470 y(dinates)h(against)g(the)h
Fu(w)j Fr(=)g Fs(\000)p Fu(y)g Fv(space.)i(If)c(we)f(have)g(a)h(point)e
Fr(\()p Fu(x;)f(y)r(;)g(z)r(;)g(w)q Fr(\))p Fv(,)g(we)i(use)g(the)g
(distance)f(measure)i Fu(y)f Fr(+)e Fu(w)q Fv(,)132 545
y(and)j(if)g(given)f(two)h(points)e Fr(\()p Fu(x)606
552 y Fp(1)625 545 y Fu(;)f(y)668 552 y Fp(1)688 545
y Fu(;)g(z)730 552 y Fp(1)749 545 y Fu(;)g(w)803 552
y Fp(1)821 545 y Fr(\))j Fv(and)g Fr(\()p Fu(x)971 552
y Fp(2)991 545 y Fu(;)d(y)1034 552 y Fp(2)1053 545 y
Fu(;)g(z)1095 552 y Fp(2)1114 545 y Fu(;)g(w)1168 552
y Fp(2)1186 545 y Fr(\))p Fv(,)k(we)f(use)g(the)g(ratio)975
622 y Fu(w)1008 629 y Fp(1)1037 622 y Fr(+)g Fu(y)1105
629 y Fp(1)p 837 642 426 2 v 837 684 a Fr(\()p Fu(w)888
691 y Fp(1)917 684 y Fr(+)f Fu(y)984 691 y Fp(1)1004
684 y Fr(\))g Fs(\000)h Fr(\()p Fu(w)1129 691 y Fp(2)1158
684 y Fr(+)f Fu(y)1225 691 y Fp(2)1245 684 y Fr(\))132
760 y Fv(to)g(calculate)h(the)g(intersection)f(with)g(the)h(space.)75
869 y(4.)23 b(T)m(o)10 b(remove)i(those)f(points)e(beyond)i(the)g(left)
g(plane)g(of)g(the)g(image-space)h(cube,)g(we)f(clip)g(our)g
(projective)g(coordi-)132 944 y(nates)g(against)f(the)i
Fu(w)j Fr(=)f Fs(\000)p Fu(x)e Fv(space.)17 b(If)12 b(we)g(have)f(a)h
(point)f Fr(\()p Fu(x;)d(y)r(;)g(z)r(;)g(w)p Fr(\))p
Fv(,)i(we)h(use)h(the)f(distance)g(measure)h Fu(x)f Fr(+)g
Fu(w)q Fv(,)132 1019 y(and)g(if)g(given)f(two)h(points)e
Fr(\()p Fu(x)606 1026 y Fp(1)625 1019 y Fu(;)f(y)668
1026 y Fp(1)688 1019 y Fu(;)g(z)730 1026 y Fp(1)749 1019
y Fu(;)g(w)803 1026 y Fp(1)821 1019 y Fr(\))j Fv(and)g
Fr(\()p Fu(x)971 1026 y Fp(2)991 1019 y Fu(;)d(y)1034
1026 y Fp(2)1053 1019 y Fu(;)g(z)1095 1026 y Fp(2)1114
1019 y Fu(;)g(w)1168 1026 y Fp(2)1186 1019 y Fr(\))p
Fv(,)k(we)f(use)g(the)g(ratio)973 1096 y Fu(w)1006 1103
y Fp(1)1035 1096 y Fr(+)g Fu(x)1107 1103 y Fp(1)p 833
1116 434 2 v 833 1158 a Fr(\()p Fu(w)884 1165 y Fp(1)913
1158 y Fr(+)g Fu(x)985 1165 y Fp(1)1004 1158 y Fr(\))f
Fs(\000)h Fr(\()p Fu(w)1129 1165 y Fp(2)1158 1158 y Fr(+)f
Fu(x)1229 1165 y Fp(2)1249 1158 y Fr(\))132 1234 y Fv(to)g(calculate)h
(the)g(intersection)f(with)g(the)h(space.)75 1343 y(5.)23
b(T)m(o)11 b(remove)h(those)f(points)g(beyond)f(the)i(right)f(plane)g
(in)h(our)f(image-space)i(cube,)f(we)g(clip)f(our)h(projective)f(coor)o
(-)132 1418 y(dinates)f(against)h(the)g Fu(w)k Fr(=)f
Fu(x)e Fv(space.)17 b(If)12 b(we)g(have)f(a)h(point)f
Fr(\()p Fu(x;)d(y)r(;)g(z)r(;)g(w)p Fr(\))p Fv(,)i(we)h(use)h(the)f
(distance)g(measure)h Fu(x)f Fs(\000)g Fu(w)q Fv(,)132
1493 y(and)g(if)g(given)f(two)h(points)e Fr(\()p Fu(x)606
1500 y Fp(1)625 1493 y Fu(;)f(y)668 1500 y Fp(1)688 1493
y Fu(;)g(z)730 1500 y Fp(1)749 1493 y Fu(;)g(w)803 1500
y Fp(1)821 1493 y Fr(\))j Fv(and)g Fr(\()p Fu(x)971 1500
y Fp(2)991 1493 y Fu(;)d(y)1034 1500 y Fp(2)1053 1493
y Fu(;)g(z)1095 1500 y Fp(2)1114 1493 y Fu(;)g(w)1168
1500 y Fp(2)1186 1493 y Fr(\))p Fv(,)k(we)f(use)g(the)g(ratio)973
1570 y Fu(w)1006 1577 y Fp(1)1035 1570 y Fs(\000)g Fu(x)1107
1577 y Fp(1)p 833 1590 V 833 1632 a Fr(\()p Fu(w)884
1639 y Fp(1)913 1632 y Fs(\000)g Fu(x)985 1639 y Fp(1)1004
1632 y Fr(\))f Fs(\000)h Fr(\()p Fu(w)1129 1639 y Fp(2)1158
1632 y Fs(\000)f Fu(x)1229 1639 y Fp(2)1249 1632 y Fr(\))132
1708 y Fv(to)g(calculate)h(the)g(intersection)f(with)g(the)h(space.)75
1817 y(6.)23 b(T)m(o)12 b(remove)i(those)e(points)f(beyond)h(the)h
(front)g(plane)f(of)h(the)g(image-space)h(cube)f(\(which)f(corresponds)
g(to)h(clip-)132 1892 y(ping)g(on)h(the)f(near)i(plane\),)g(we)f(clip)g
(our)g(projective)f(coordinates)g(against)g(the)h Fu(w)24
b Fr(=)f Fu(z)16 b Fv(space.)25 b(If)14 b(we)h(have)f(a)132
1967 y(point)f Fr(\()p Fu(x;)8 b(y)r(;)g(z)r(;)g(w)q
Fr(\))p Fv(,)13 b(we)i(use)f(the)g(distance)g(measure)i
Fu(z)h Fs(\000)e Fu(w)q Fv(,)h(and)e(if)h(given)f(two)g(points)f
Fr(\()p Fu(x)1655 1974 y Fp(1)1674 1967 y Fu(;)8 b(y)1717
1974 y Fp(1)1736 1967 y Fu(;)g(z)1778 1974 y Fp(1)1797
1967 y Fu(;)g(w)1851 1974 y Fp(1)1870 1967 y Fr(\))14
b Fv(and)132 2042 y Fr(\()p Fu(x)176 2049 y Fp(2)195
2042 y Fu(;)8 b(y)238 2049 y Fp(2)257 2042 y Fu(;)g(z)299
2049 y Fp(2)318 2042 y Fu(;)g(w)372 2049 y Fp(2)391 2042
y Fr(\))p Fv(,)j(we)g(use)g(the)g(ratio)975 2086 y Fu(w)1008
2093 y Fp(1)1038 2086 y Fs(\000)f Fu(z)1104 2093 y Fp(1)p
838 2106 424 2 v 838 2148 a Fr(\()p Fu(w)889 2155 y Fp(1)918
2148 y Fs(\000)g Fu(z)984 2155 y Fp(1)1004 2148 y Fr(\))g
Fs(\000)h Fr(\()p Fu(w)1129 2155 y Fp(2)1158 2148 y Fs(\000)f
Fu(z)1224 2155 y Fp(2)1244 2148 y Fr(\))132 2213 y Fv(to)g(calculate)h
(the)g(intersection)f(with)g(the)h(space.)75 2321 y(7.)23
b(T)m(o)12 b(remove)h(those)f(points)g(beyond)f(the)i(back)g(plane)f
(of)h(our)g(image-space)g(cube)g(\(which)f(corresponds)g(to)h(clip-)132
2396 y(ping)f(on)i(the)g(far)g(plane\),)h(we)f(clip)f(our)h(projective)
f(coordinates)f(against)h(the)h Fu(w)22 b Fr(=)g Fs(\000)p
Fu(z)17 b Fv(space.)23 b(If)15 b(we)f(have)g(a)132 2471
y(point)f Fr(\()p Fu(x;)8 b(y)r(;)g(z)r(;)g(w)q Fr(\))p
Fv(,)13 b(we)i(use)f(the)g(distance)g(measure)i Fu(z)h
Fr(+)e Fu(w)q Fv(,)h(and)e(if)h(given)f(two)g(points)f
Fr(\()p Fu(x)1655 2478 y Fp(1)1674 2471 y Fu(;)8 b(y)1717
2478 y Fp(1)1736 2471 y Fu(;)g(z)1778 2478 y Fp(1)1797
2471 y Fu(;)g(w)1851 2478 y Fp(1)1870 2471 y Fr(\))14
b Fv(and)132 2546 y Fr(\()p Fu(x)176 2553 y Fp(2)195
2546 y Fu(;)8 b(y)238 2553 y Fp(2)257 2546 y Fu(;)g(z)299
2553 y Fp(2)318 2546 y Fu(;)g(w)372 2553 y Fp(2)391 2546
y Fr(\))p Fv(,)j(we)g(use)g(the)g(ratio)975 2590 y Fu(w)1008
2597 y Fp(1)1038 2590 y Fr(+)f Fu(z)1104 2597 y Fp(1)p
838 2611 V 838 2652 a Fr(\()p Fu(w)889 2659 y Fp(1)918
2652 y Fr(+)g Fu(z)984 2659 y Fp(1)1004 2652 y Fr(\))g
Fs(\000)h Fr(\()p Fu(w)1129 2659 y Fp(2)1158 2652 y Fr(+)f
Fu(z)1224 2659 y Fp(2)1244 2652 y Fr(\))970 2765 y Fv(17)p
eop
%%Page: 18 18
18 17 bop 132 286 a Fv(to)10 b(calculate)h(the)g(intersection)f(with)g
(the)h(space.)18 399 y(A)f(polygon)f(is)h(clipped)g(against)f(each)i
(plane)f(in)h(turn,)f(utilizing)e(the)j(output)d(of)j(one)f(clipping)f
(operation)h(as)g(the)g(input)g(to)18 474 y(the)h(next.)k(Clipping)9
b(is)i(terminated)g(if)g(all)f(points)g(are)i(clipped)e(out)g(at)i(any)
f(one)g(stage.)p 243 599 1500 3 v 88 724 a(It)i(should)e(be)i(noted)f
(that)g(we)h(do)f(not)g(necessarily)f(clip)h(against)g(the)g(front)h
(and)f(back)h(planes)f(of)g(the)h(image-space)18 799
y(cube,)d(as)g(there)g(are)g(frequently)e(applications)g(in)h(which)g
(we)h(will)e(wish)h(to)g(see)h(the)f(points)f(outside)g(of)i(the)f
(area)i(enclosed)18 874 y(by)g(these)f(planes.)p 243
999 V 18 1124 a Fo(One)i(\256nal)f(important)h(fact.)88
1199 y Fv(If)g(we)f(examine)h(the)f(viewing)e(transformation,)p
427 1216 437 2 v 11 w(we)i(note)g(that)f(the)h(points)f(behind)g(the)h
(viewer)g(get)g(transformed)g(to)18 1274 y(points)h(with)g(a)i
(negative)f Fu(w)i Fv(coordinate.)21 b(W)l(e)14 b(have)g(already)f
(seen)h(that)f(these)g(points)f(cause)h(line)g(segments)g(to)g
(\252pass)18 1349 y(through)g(in\256nity\272)h(in)g(homogeneous)f
(space.)26 b(This)14 b(could)g(cause)h(these)f(line)g(segments)g(to)h
(appear)g(to)f(wrap)h(around)18 1424 y(the)d(screen,)i(which)e(is)g
(undesirable)f(in)i(our)f(pictures.)19 b(The)12 b(reason)h(for)f(our)h
(\256rst)f(clip)g(\(of)h(the)g(seven)f(total)g(clips\))f(is)i(to)18
1499 y(eliminate)d(these)h(problem)g(points)f(by)g(\256rst)h(clipping)f
(so)h(that)f(no)h(points)e(will)i(have)g(a)g(negative)g
Fu(w)h Fv(coordinate.)p 243 1624 1500 3 v 18 1738 a Fa(All)e(contents)e
(copyright)g(\(c\))i(1996,)e(1997,)h(1998,)f(1999)18
1784 y(Computer)g(Science)g(Department,)g(University)h(of)g
(California,)h(Davis)18 1829 y(All)g(rights)f(r)o(eserved.)970
2765 y Fv(18)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
